<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pluto C-137</title>
    <description>May the force be with you</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 26 Jun 2019 11:36:34 +0800</pubDate>
    <lastBuildDate>Wed, 26 Jun 2019 11:36:34 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Machine Learning notes</title>
        <description>&lt;h2 id=&quot;define-ml&quot;&gt;Define ML&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Arthur Samule(1959): fields of study that gives computers ability to learn without being explicitly programmed.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Samule 曾写了个跳棋(checker)程序，不断训练让程序学习什么是好的move，什么是坏的。尽管Samule本人并不擅长checker，但一个不擅长checker的人在1950s能编写并训练出一个比自己更擅长checker的程序，这是一件很了不起的事情。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tom Mitchell(1998): A computer program is said to learn some experience &lt;script type=&quot;math/tex&quot;&gt;E&lt;/script&gt; w.r.t. some task &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt; and some performance &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt;, if its performance &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt;, as measured by &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt;, improves with experience &lt;script type=&quot;math/tex&quot;&gt;E&lt;/script&gt;.&lt;/p&gt;

    &lt;p&gt;i.e., 关于任务&lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt;的程序&lt;script type=&quot;math/tex&quot;&gt;Pr&lt;/script&gt; 的成绩&lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt;， 正比于从&lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt;中学习到的经验&lt;script type=&quot;math/tex&quot;&gt;E&lt;/script&gt;.&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;P(Pr_T) \propto E(Pr_T)&lt;/script&gt;

    &lt;blockquote&gt;
      &lt;p&gt;上述定义其实是“针对” good ML program，如果一个算法越学越差，本质上也是一个ML算法，但只能算是一个糟糕的算法 (分类问题+准确率极低的算法+结果取反 = 一个准确率还不错的算法？)。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;quick-question-what-do-you-think-about-ai&quot;&gt;Quick question: what do you think about AI?&lt;/h3&gt;

&lt;p&gt;AI的本质是, 人类所赋予机器(or 工具)的一种能够解决具备一定难度的问题的能力(the ability to solve certain difficult problems — difficult in the sense that they are not easily solved by humans)，这种能力越强，就能越好的解决问题(e.g., 准确率更高的分类器)。&lt;/p&gt;

&lt;p&gt;但机器所被赋予的intelligence，在相当长一段时间内都是比较单一、针对一个或者一类具对问题的能力，它们很难做到像人类一样进行逻辑推理、反思总结并把结果推广到其他问题上。未来的技术有可能创造出&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/终结者&quot;&gt;终结者&lt;/a&gt;这样的AI — 目的单一：杀死Sara，阻碍John Connor的诞生(其用到的人脸识别、运动中识别并跨越、躲避障碍物的技术都将在未来数年内得到大幅提升)。但行动自然、可以熟练运用计谋、同情心、美色诱惑并欺骗人类以逃离的&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/机械姬&quot;&gt;机械姬 Ex Machina&lt;/a&gt;则不太可能。&lt;/p&gt;

&lt;p&gt;AI很难做出人类的复本，但也可能完全没有这个必要 。飞机像鸟类一样飞翔，但不必振动机翼。&lt;/p&gt;

&lt;h3 id=&quot;问题分类&quot;&gt;问题分类&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;regression problem v.s. classification
    &lt;ul&gt;
      &lt;li&gt;主要区别：预测结果是连续的(continuous valued output)还是离散的(discrete)。问题可以相互转化，二者界线也并非那么绝对。房价是连续的，但可以划分为离散的区间 (A: 0-10Million, B:10~20M, C:…)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;supervised v.s. unsupervised
    &lt;ul&gt;
      &lt;li&gt;supervised: each example has a label (“right” answer), we teach program how to learn&lt;/li&gt;
      &lt;li&gt;unsupervised&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;linear-regression&quot;&gt;Linear Regression&lt;/h2&gt;

&lt;h3 id=&quot;hypothesis-h&quot;&gt;Hypothesis &lt;script type=&quot;math/tex&quot;&gt;h&lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;h_\theta(x^i) = \theta \cdot x^i =  \theta_0 + \theta_1 x_1^i + \cdots + \theta_n x _n^i&lt;/script&gt;

&lt;p&gt;###Why prediction function is called hypothesis ?&lt;/p&gt;

&lt;p&gt;历史残留原因，早期ml领域采用了这个术语，一直沿袭至今。&lt;/p&gt;

&lt;h4 id=&quot;parameters-theta--theta_0--theta_n&quot;&gt;Parameters &lt;script type=&quot;math/tex&quot;&gt;\theta = (\theta_0, …, \theta_n)&lt;/script&gt;&lt;/h4&gt;

&lt;h4 id=&quot;goal&quot;&gt;Goal&lt;/h4&gt;

&lt;p&gt;代价函数&lt;script type=&quot;math/tex&quot;&gt;J(\theta) = \frac{1}{2m} \mid h_\theta(X) - Y \mid ^2 =\frac{1}{2m} \Sigma_{i=1}^m \mid h(x^i) - y^i \mid ^2&lt;/script&gt;, 找到 &lt;script type=&quot;math/tex&quot;&gt;\theta&lt;/script&gt; 使得 &lt;script type=&quot;math/tex&quot;&gt;\text{minimize} J(\theta)&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;why-square-error-function&quot;&gt;Why square error function?&lt;/h3&gt;

&lt;p&gt;对于多数regression问题来说，sef 都是一个不错的选择&lt;/p&gt;

&lt;h2 id=&quot;gdgradient-descent&quot;&gt;GD(gradient descent)&lt;/h2&gt;

&lt;h3 id=&quot;batch-gd&quot;&gt;“Batch” GD&lt;/h3&gt;

&lt;p&gt;batch : Each step of GD uses all the training examples&lt;/p&gt;

&lt;p&gt;​	&lt;script type=&quot;math/tex&quot;&gt;\text{repeat} \{ \theta_j = \theta_j - \frac{\partial}{ \partial \theta_j} J(\theta) \}  = \theta_j - \alpha/m \Sigma_1^m(h_\theta(x^{(i)} -y^{(i)} ) x_j^{(i)} )&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;feature-scaling&quot;&gt;Feature scaling&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;why ? 从以上GD的迭代过程看到，&lt;strong&gt;&lt;script type=&quot;math/tex&quot;&gt;\theta_j&lt;/script&gt;的更新幅度与&lt;script type=&quot;math/tex&quot;&gt;x_j&lt;/script&gt;相关&lt;/strong&gt;。如果某个&lt;script type=&quot;math/tex&quot;&gt;x_j&lt;/script&gt;的尺度相较其他维度特征大很多，势必造成该维度对应的参数&lt;script type=&quot;math/tex&quot;&gt;\theta_j&lt;/script&gt;的更新非常剧烈，而其他维度特征对应的参数更新相对缓和，这样造成迭代过程中很多轮次实际上是为了消除特征尺度上的不一致，而不是快速的找到最优点，最终极大影响收敛速度。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How ? E.g., mean normalization (均值标准化？)&lt;/p&gt;

    &lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;x_i  = \frac{x_i - u_i}{s_i}&lt;/script&gt;，其中  &lt;script type=&quot;math/tex&quot;&gt;u_i = 1/\mid x_i\mid \sum(x_i^j), s_i = \text{max}(x_i) - \text{min}(x_i)&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dirty-notes&quot;&gt;Dirty notes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Octave lib (Prof. Andrew Ng 建议初学者使用)˘&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 25 Jun 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/25/ml-notes/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/25/ml-notes/</guid>
        
        <category>ml</category>
        
        <category>tutorial</category>
        
        
      </item>
    
      <item>
        <title>Golden section search</title>
        <description>&lt;h2 id=&quot;gssgolden-section-search&quot;&gt;GSS(golden section search)&lt;/h2&gt;

&lt;p&gt;GSS is the limit of &lt;a href=&quot;https://en.wikipedia.org/wiki/Golden-section_search&quot;&gt;Fibonacci search&lt;/a&gt;. 通过不断缩小搜索空间，在一个单锋函数(unimodal function)寻找最值。&lt;/p&gt;

&lt;p&gt;以下为寻找&lt;script type=&quot;math/tex&quot;&gt;[a, b]&lt;/script&gt;间使得&lt;script type=&quot;math/tex&quot;&gt;f(x) = (x -2 )^2&lt;/script&gt;最小的&lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;的Python代码&lt;/p&gt;

&lt;h3 id=&quot;idea&quot;&gt;idea&lt;/h3&gt;

&lt;p&gt;假设 &lt;script type=&quot;math/tex&quot;&gt;f(x)&lt;/script&gt;是一个二次函数，在区间&lt;script type=&quot;math/tex&quot;&gt;[a,b]&lt;/script&gt;存在极小值(也必然是最小值，设为 &lt;script type=&quot;math/tex&quot;&gt;x_m&lt;/script&gt;)，在&lt;script type=&quot;math/tex&quot;&gt;[a,b]&lt;/script&gt;间选择两个点&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
c, d (a &lt; c &lt; d &lt; b) %]]&gt;&lt;/script&gt;,显然有&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
f(c) &lt; \text{max}(f(a), f(d)), f(d) &lt; \text{max}(f(a), f(d)) %]]&gt;&lt;/script&gt; .&lt;/p&gt;

&lt;p&gt;如果 &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
f(c) &lt; f(d) %]]&gt;&lt;/script&gt; ，then 必然有 &lt;script type=&quot;math/tex&quot;&gt;x_m \in [a,d]&lt;/script&gt; (&lt;script type=&quot;math/tex&quot;&gt;x_m&lt;/script&gt;也可能位于&lt;script type=&quot;math/tex&quot;&gt;a,c&lt;/script&gt;之间，取决于&lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;的位置)。这时，用&lt;script type=&quot;math/tex&quot;&gt;d&lt;/script&gt;代替&lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;将缩小搜索区间。不断迭代这个过程，直到 &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
abs(a-b) &lt; eps \to 0 %]]&gt;&lt;/script&gt;。那么问题是：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;如何选择 &lt;script type=&quot;math/tex&quot;&gt;c, d&lt;/script&gt; ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;GSS的策略是选择 &lt;script type=&quot;math/tex&quot;&gt;c, d&lt;/script&gt; 使得 &lt;script type=&quot;math/tex&quot;&gt;(d-c) / (c-a) = (c-a) / (b-c)  = (d-c) /(b-d)&lt;/script&gt; 如此，以保证 &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;即不会太接近于&lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt;，或者太接近于&lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;. i.e., &lt;script type=&quot;math/tex&quot;&gt;c - a ==  b - d&lt;/script&gt;. 令 &lt;script type=&quot;math/tex&quot;&gt;x = c - a == b - d, y = d - c&lt;/script&gt;，那么 &lt;script type=&quot;math/tex&quot;&gt;y / x = x / (x + y) =&gt; x^2 = xy + y^2 =&gt; (x/y)^2 - (x/y) = 1&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;求解关系式: &lt;script type=&quot;math/tex&quot;&gt;x/y = \frac{1+\sqrt{5}}{2} = 1.618033988…&lt;/script&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;python progra m for golden section search. &quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'''
    golden section search
    to find the minimum of f on [a,b]
    f: a strictly unimodal function on [a,b], example: f = lambda x: (x-2)**2
    '''&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# eps = 10**-9
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# recompute both c and d here to avoid loss of precision which may lead to incorrect results or infinite loop
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;practice&quot;&gt;Practice&lt;/h3&gt;

&lt;p&gt;如何从一个“山形”列表arr中找出最大值index？&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findMaxElementIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chooseC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.382&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chooseD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.618&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chooseC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chooseD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chooseD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chooseC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;# 列表非连接函数，最终x1,x2未必能刚好达到 x1 == x2，以上方法目的将搜索区间快速缩小到一个常数范围，然后暴力求解
&lt;/span&gt;
	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 23 Jun 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/23/golden-section-search/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/23/golden-section-search/</guid>
        
        <category>algorithm</category>
        
        <category>golden-section</category>
        
        
      </item>
    
      <item>
        <title>Jekyll &amp; Gitpages</title>
        <description>&lt;h2 id=&quot;jekyll资料&quot;&gt;Jekyll资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;官网 &lt;a href=&quot;https://www.jekyll.com.cn/&quot;&gt;jekyll&lt;/a&gt;: 有简单的中文教程，但细节、后续配置主要还是English&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=T1itpPvFWHI&amp;amp;list=PLLAZ4kZ9dFpOPV5C5Ay0pHaa0RJFhcmcB&amp;amp;index=1&quot;&gt;youtube: walk you through jekyll&lt;/a&gt; 有19个小节，每个小节不到10分钟(差不多一上午看完)。  大致讲解如何让Jekyll跑起来，并做一些进行简单的配置&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前方有坑&quot;&gt;前方有坑&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;使用&lt;a href=&quot;http://www.disqus.com&quot;&gt;disqus&lt;/a&gt;添加评论模块没有成功，最终使用了Gitalk，相关博客参考：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://minghao23.com/2019/02/02/BlogBuild/&quot;&gt;使用Github Pages搭建你的个人网站&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://objcoding.com/2017/11/28/Gitalk/&quot;&gt;使用Gitalk搭建博客评论模块&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设置代码默认字体 &lt;code class=&quot;highlighter-rouge&quot;&gt;css/syntax.css&lt;/code&gt;， 在&lt;code class=&quot;highlighter-rouge&quot;&gt;.highlight pre code *&lt;/code&gt;中添加 &lt;code class=&quot;highlighter-rouge&quot;&gt;font-family: &quot;Courier New&quot;&lt;/code&gt;. 代码效果如下:&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello Jekyll.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 20 Jun 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/20/Jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/20/Jekyll/</guid>
        
        <category>jekyll</category>
        
        <category>gitpages</category>
        
        
      </item>
    
  </channel>
</rss>
