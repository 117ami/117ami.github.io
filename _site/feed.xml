<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-08-14T18:24:09+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">pluto137’s blog</title><subtitle>blog</subtitle><author><name>ssrzz</name></author><entry><title type="html">深度学习-VGG16</title><link href="http://localhost:4000/2019/08/04/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-VGG16/" rel="alternate" type="text/html" title="深度学习-VGG16" /><published>2019-08-04T00:00:00+08:00</published><updated>2019-08-04T00:00:00+08:00</updated><id>http://localhost:4000/2019/08/04/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-VGG16</id><content type="html" xml:base="http://localhost:4000/2019/08/04/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-VGG16/">&lt;h1 id=&quot;资源&quot;&gt;资源&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;文献
    &lt;ul&gt;
      &lt;li&gt;VGG-16论文题目：Very Deep Convolutional Networks for Large-Scale Image Recognition K. Simonyan, A. Zisserman&lt;/li&gt;
      &lt;li&gt;VGG-16论文Arxiv链接 https://arxiv.org/pdf/1409.1556.pdf&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;文件
    &lt;ul&gt;
      &lt;li&gt;VGG-16模型权重 https://www.cs.toronto.edu/~frossard/vgg16/vgg16_weights.npz&lt;/li&gt;
      &lt;li&gt;TensorFlow 模型  https://www.cs.toronto.edu/~frossard/vgg16/vgg16.py&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;简介&quot;&gt;简介&lt;/h1&gt;

&lt;p&gt;VGG(&lt;strong&gt;Visual Geometry Group&lt;/strong&gt;)是由K.Simonyan and A.Zisserman提出来的一个卷积神经网络模型。这个模型在ImageNet中 Top-5 测试准确率可达 92.7% （ImageNet要求从 1400 万张图片中分出1000 类)。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;应用
    &lt;ul&gt;
      &lt;li&gt;给定图片 —&amp;gt; 找到对应图片的分类&lt;/li&gt;
      &lt;li&gt;可适用于1000类图片&lt;/li&gt;
      &lt;li&gt;图片输入尺寸 224 * 224 * 3 （RGB image)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;结构
    &lt;ul&gt;
      &lt;li&gt;卷积层&lt;/li&gt;
      &lt;li&gt;最大池化层&lt;/li&gt;
      &lt;li&gt;全连接层&lt;/li&gt;
      &lt;li&gt;总计16层
        &lt;ul&gt;
          &lt;li&gt;Convolution using 64 filters&lt;/li&gt;
          &lt;li&gt;Convolution using 64 filters + Max pooling&lt;/li&gt;
          &lt;li&gt;Convolution using 128 filters&lt;/li&gt;
          &lt;li&gt;Convolution using 128 filters + Max pooling&lt;/li&gt;
          &lt;li&gt;Convolution using 256 filters&lt;/li&gt;
          &lt;li&gt;Convolution using 256 filters&lt;/li&gt;
          &lt;li&gt;Convolution using 256 filters + Max pooling&lt;/li&gt;
          &lt;li&gt;Convolution using 512 filters&lt;/li&gt;
          &lt;li&gt;Convolution using 512 filters&lt;/li&gt;
          &lt;li&gt;Convolution using 512 filters + Max pooling&lt;/li&gt;
          &lt;li&gt;Convolution using 512 filters&lt;/li&gt;
          &lt;li&gt;Convolution using 512 filters&lt;/li&gt;
          &lt;li&gt;Convolution using 512 filters + Max pooling&lt;/li&gt;
          &lt;li&gt;Fully connected with 4096 nodes&lt;/li&gt;
          &lt;li&gt;Fully connected with 4096 nodes&lt;/li&gt;
          &lt;li&gt;Output layer with Softmax activation with 1000 nodes&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;属性
    &lt;ul&gt;
      &lt;li&gt;模型大小  528MB&lt;/li&gt;
      &lt;li&gt;Top-1 Accuracy: 70.5%&lt;/li&gt;
      &lt;li&gt;Top-5 Accuracy: 90.0%&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;预训练模型 &lt;a href=&quot;https://www.cs.toronto.edu/~frossard/vgg16/vgg16_weights.npz&quot;&gt;pre trained model&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>ssrzz</name></author><category term="ml" /><category term="tutorial" /><summary type="html">资源</summary></entry><entry><title type="html">高斯混合模型</title><link href="http://localhost:4000/2019/08/03/%E9%AB%98%E6%96%AF%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8B/" rel="alternate" type="text/html" title="高斯混合模型" /><published>2019-08-03T00:00:00+08:00</published><updated>2019-08-03T00:00:00+08:00</updated><id>http://localhost:4000/2019/08/03/%E9%AB%98%E6%96%AF%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8B</id><content type="html" xml:base="http://localhost:4000/2019/08/03/%E9%AB%98%E6%96%AF%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8B/">&lt;h1 id=&quot;gaussian&quot;&gt;Gaussian&lt;/h1&gt;

&lt;p&gt;Gaussian Mixture Model(GMM)是多个高斯分布函数的线性组合，理论上GMM可以拟合出任意类型的分布，通常用于解决同一集合下的数据包含多个不同的分布的情况（或者是同一类分布但参数不一样，或者是不同类型的分布，比如正态分布和伯努利分布）。&lt;/p&gt;

&lt;h1 id=&quot;model-formula&quot;&gt;Model Formula&lt;/h1&gt;

&lt;p&gt;假设随机变量为&lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; ,那么GMM可以表示为：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(x) = \sum\limits_{k=1}^K \pi_k \mathcal{N}(x|\mu_k, \sigma_k)&lt;/script&gt;

&lt;p&gt;其中&lt;script type=&quot;math/tex&quot;&gt;\mathcal{N}(x\mid\mu_k, \sigma_k)&lt;/script&gt; 为混合模型中的第&lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;个&lt;strong&gt;分量(component)&lt;/strong&gt;； &lt;script type=&quot;math/tex&quot;&gt;\pi_k&lt;/script&gt;为&lt;strong&gt;混合系统(mixture coefficient)&lt;/strong&gt; s.t. &lt;script type=&quot;math/tex&quot;&gt;\sum\limits_{k=1}^K \pi_k = 1&lt;/script&gt;，也可以认为是第&lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;个分量的权重。&lt;/p&gt;

&lt;h1 id=&quot;应用&quot;&gt;应用&lt;/h1&gt;

&lt;p&gt;将GMM用于聚类时，假设数据服从混合高斯分布（Mixture Gaussian Distribution），那么只要根据数据推出 GMM 的概率分布来即可。&lt;/p&gt;

&lt;p&gt;GMM 的 $K$ 个分量实际上对应$K$个&lt;strong&gt;簇(cluster)&lt;/strong&gt; 。根据数据来推算概率密度通常被称作 density estimation 。特别地，当我已知（或假定）概率密度函数的形式，而要估计其中的参数的过程被称作&lt;strong&gt;参数估计&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;参数估计&quot;&gt;参数估计&lt;/h2&gt;

&lt;p&gt;当存在$K$个聚类，公式&lt;script type=&quot;math/tex&quot;&gt;p(x) = \sum\limits_{k=1}^K \pi_k \mathcal{N}(x\|\mu_k, \sigma_k)&lt;/script&gt;中存在 &lt;script type=&quot;math/tex&quot;&gt;3K&lt;/script&gt; 个未知参数 &lt;script type=&quot;math/tex&quot;&gt;\{\pi_k, \mu_k, \sigma_k\| k \in [1..K]\}&lt;/script&gt;。如何估算这些参数 ？Short answer:  &lt;strong&gt;最大似然估计&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;TODO&lt;/p&gt;

&lt;h2 id=&quot;在kaggle练手比赛中的应用&quot;&gt;在Kaggle(练手)比赛中的应用&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kaggle.com/c/data-science-london-scikit-learn/&quot;&gt;Data-Science-londo-scikit-learn&lt;/a&gt; 给出一个简单的训练集(1000 x 40)，存在40个特征，要求对9000个测试样本进行预测。使用简单的KNN/RandomForest算法，通过网格搜索最佳参数，最终预测结果：0.89828&lt;/p&gt;

&lt;p&gt;而采用GMM对数据进行处理后，再使用KNN/随机森林，预测结果可达：0.99143 （前20名的水平）&lt;/p&gt;

&lt;h2 id=&quot;sklearn--gmm&quot;&gt;Sklearn &amp;amp; GMM&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;seaborn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.datasets.samples_generator&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_blobs&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Produce experiment data, 4 clusters&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_blobs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_samples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;centers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cluster_std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random_state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.mixture&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GaussianMixture&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gmm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GaussianMixture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gmm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'viridis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;聚类&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/gmm.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/jinping_shi/article/details/59613054&quot;&gt;高斯混合模型（GMM）及其EM算法的理解&lt;/a&gt;，阿拉丁吃米粉，CSDN blog&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>ssrzz</name></author><category term="ML" /><category term="GMM" /><summary type="html">Gaussian</summary></entry><entry><title type="html">Interesting Notes</title><link href="http://localhost:4000/2019/07/20/Interesting-Notes/" rel="alternate" type="text/html" title="Interesting Notes" /><published>2019-07-20T00:00:00+08:00</published><updated>2019-07-20T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/20/Interesting-Notes</id><content type="html" xml:base="http://localhost:4000/2019/07/20/Interesting-Notes/">&lt;ul&gt;
  &lt;li&gt;TPU 果然比 GPU快太多了&lt;/li&gt;
  &lt;li&gt;Ml 的根本问题是&lt;strong&gt;优化与泛化之间的对立&lt;/strong&gt; 。 优化：调节模型以在训练数据上得到最佳性能； 泛化：训练好的模型在前所未见的数据上的性能好坏。 理想的模型是刚好在欠拟合和过拟合的界线上，在容量不足和容量过大的界线上。为了找到这条界线，你必须穿过它。&lt;/li&gt;
  &lt;li&gt;ML最终目的是得到良好的泛化，但你无法控制泛化，只能基于训练数据调节模型。&lt;/li&gt;
  &lt;li&gt;ffmpeg -i input.mkv -vf fps=5 face%04d.jpg -hide_banner 从input.mkv中抽取视频，每秒抽取5张&lt;/li&gt;
  &lt;li&gt;AI: 将认知过程自动化的所有尝试，换句话即是，思想的自动化&lt;/li&gt;
  &lt;li&gt;ffmpeg -i input.mp4 -ss 00:00:06.0 -c copy -to 00:01:54.0 output.mp4 To trim videos, time format HH:MM:SS.0 -ss start time -to end time&lt;/li&gt;
&lt;/ul&gt;</content><author><name>ssrzz</name></author><category term="AI" /><category term="ML" /><summary type="html">TPU 果然比 GPU快太多了 Ml 的根本问题是优化与泛化之间的对立 。 优化：调节模型以在训练数据上得到最佳性能； 泛化：训练好的模型在前所未见的数据上的性能好坏。 理想的模型是刚好在欠拟合和过拟合的界线上，在容量不足和容量过大的界线上。为了找到这条界线，你必须穿过它。 ML最终目的是得到良好的泛化，但你无法控制泛化，只能基于训练数据调节模型。 ffmpeg -i input.mkv -vf fps=5 face%04d.jpg -hide_banner 从input.mkv中抽取视频，每秒抽取5张 AI: 将认知过程自动化的所有尝试，换句话即是，思想的自动化 ffmpeg -i input.mp4 -ss 00:00:06.0 -c copy -to 00:01:54.0 output.mp4 To trim videos, time format HH:MM:SS.0 -ss start time -to end time</summary></entry><entry><title type="html">Kaggle Competitions</title><link href="http://localhost:4000/2019/07/05/Kaggle-Competitions/" rel="alternate" type="text/html" title="Kaggle Competitions" /><published>2019-07-05T00:00:00+08:00</published><updated>2019-07-05T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/05/Kaggle-Competitions</id><content type="html" xml:base="http://localhost:4000/2019/07/05/Kaggle-Competitions/">&lt;h2 id=&quot;mnist---digit-recognizer&quot;&gt;MNIST - Digit Recognizer&lt;/h2&gt;

&lt;p&gt;MNIST (“Modified National Institute of Standards and Technology”) — ML领域的“HELLO WORLD”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kaggle.com/c/digit-recognizer/leaderboard&quot;&gt;Digit Recognizer&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Train set 42000, label 为数字，图片以像素向量的形式给出(&lt;script type=&quot;math/tex&quot;&gt;[pixel_0, … , pixel_{783}]&lt;/script&gt;)&lt;/li&gt;
  &lt;li&gt;Test set 28000。目的：尽可能提高图片中数字识别率&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;随机森林&quot;&gt;随机森林&lt;/h3&gt;

&lt;p&gt;直接调用&lt;code class=&quot;highlighter-rouge&quot;&gt;sklearn&lt;/code&gt;中RandomForest分类器进行学习验证。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.ensemble&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RandomForestClassifier&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;forest_clf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RandomForestClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_estimators&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;forest_clf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;final_pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forest_clf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;结果：0.96542, 大约排在2400+/3200+的位置，&lt;/p&gt;

&lt;h3 id=&quot;cnn&quot;&gt;CNN&lt;/h3&gt;

&lt;p&gt;卷积神经网络 2 层（1层32filters， 1层 64 filters)&lt;/p&gt;

&lt;p&gt;Echos = 6, train:test ratio 19:2(3800:400), result : 0.98528 (1630 / 3200+)&lt;/p&gt;

&lt;p&gt;Echos = 16, train:test ratio 20: 1, result : 0.98642 基本上没有多大提升&lt;/p&gt;

&lt;h2 id=&quot;colab&quot;&gt;Colab&lt;/h2&gt;

&lt;h3 id=&quot;colab-挂载google-drive方法&quot;&gt;Colab 挂载Google Drive方法&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from google.colab import drive
drive.mount&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/gdrive'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# list files&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /gdrive/&lt;span class=&quot;s1&quot;&gt;'My Drive'&lt;/span&gt;/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第一次挂载需要验证绑定账号，挂载成功后在 &lt;code class=&quot;highlighter-rouge&quot;&gt;My Drive&lt;/code&gt;中建文件夹、上传数据都可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;/gdrive/'My Drive'&lt;/code&gt;打开。&lt;/p&gt;</content><author><name>ssrzz</name></author><category term="machine learning" /><category term="CNN" /><category term="TensorFlow" /><category term="Keras" /><summary type="html">MNIST - Digit Recognizer</summary></entry><entry><title type="html">Sorting Algorithms</title><link href="http://localhost:4000/2019/07/05/Sorting-Algorithms/" rel="alternate" type="text/html" title="Sorting Algorithms" /><published>2019-07-05T00:00:00+08:00</published><updated>2019-07-05T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/05/Sorting-Algorithms</id><content type="html" xml:base="http://localhost:4000/2019/07/05/Sorting-Algorithms/">&lt;h2 id=&quot;quick-sort&quot;&gt;Quick Sort&lt;/h2&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;quicksort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quicksort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quicksort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;
    
    &lt;span class=&quot;c&quot;&gt;# move all elements less than pivot to left of pindex&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pindex&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Inplace recursive 算法&lt;/li&gt;
  &lt;li&gt;Time complexity &lt;script type=&quot;math/tex&quot;&gt;O(n  \cdot  logn)&lt;/script&gt;， worst-case running time &lt;script type=&quot;math/tex&quot;&gt;O(n^2)&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;merge-sort&quot;&gt;Merge sort&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Not inplace&lt;/li&gt;
  &lt;li&gt;Time complexity &lt;script type=&quot;math/tex&quot;&gt;O(n \cdot logn)&lt;/script&gt;, space complexity &lt;script type=&quot;math/tex&quot;&gt;O(n)&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;bucket-sort&quot;&gt;Bucket sort&lt;/h1&gt;</content><author><name>ssrzz</name></author><category term="quick sort" /><category term="merge sort" /><summary type="html">Quick Sort</summary></entry><entry><title type="html">Halting Problem</title><link href="http://localhost:4000/2019/07/05/Halting-Problem/" rel="alternate" type="text/html" title="Halting Problem" /><published>2019-07-05T00:00:00+08:00</published><updated>2019-07-05T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/05/Halting-Problem</id><content type="html" xml:base="http://localhost:4000/2019/07/05/Halting-Problem/">&lt;h2 id=&quot;halting-problem&quot;&gt;Halting Problem&lt;/h2&gt;

&lt;p&gt;停机问题: 判断任意一个程序是否能在有限的时间之内结束运行的问题。等价于如下判定问题：是否存在一个程序&lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt;，对于任意输入的程序&lt;script type=&quot;math/tex&quot;&gt;\omega&lt;/script&gt;，能够判断&lt;script type=&quot;math/tex&quot;&gt;\omega&lt;/script&gt;会在有限时间内结束或者死循环。&lt;/p&gt;

&lt;p&gt;HP是不可判定的，本质上是 &lt;strong&gt;一阶逻辑的不自洽性&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;一个简单的证明&quot;&gt;一个简单的证明&lt;/h2&gt;

&lt;p&gt;Source &lt;a href=&quot;https://www.youtube.com/watch?v=92WHN-pAFCs&quot;&gt;计算机不是万能的&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;假设存在一个机器 &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt; ，它总能判定另外一机器 &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; 对于任意输入 &lt;script type=&quot;math/tex&quot;&gt;\omega&lt;/script&gt; 都能停机&lt;/li&gt;
  &lt;li&gt;引入机器 &lt;script type=&quot;math/tex&quot;&gt;D&lt;/script&gt;, 对于任意输入 &lt;script type=&quot;math/tex&quot;&gt;\omega&lt;/script&gt;， 复制并输出两份 &lt;script type=&quot;math/tex&quot;&gt;\omega&lt;/script&gt; ; 机器 &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt; 读入 &lt;script type=&quot;math/tex&quot;&gt;\omega \in \{ \text{stuck}, \text{not stuck} \}&lt;/script&gt;，输出 &lt;script type=&quot;math/tex&quot;&gt;\neg \omega&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;拼接以上3个机器 &lt;script type=&quot;math/tex&quot;&gt;D -&gt; T -&gt; R&lt;/script&gt; 得到 &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Question: &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; 输入 &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; (written as &lt;script type=&quot;math/tex&quot;&gt;X(X)&lt;/script&gt;) 是否停机 ？&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;停机 ： =&amp;gt; &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt; 的读入为&lt;em&gt;不停机&lt;/em&gt;，=&amp;gt;  &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt; 读入 &lt;script type=&quot;math/tex&quot;&gt;(X, X)&lt;/script&gt; 输出为不停机 ，=&amp;gt; &lt;script type=&quot;math/tex&quot;&gt;X(X)&lt;/script&gt;不停机，矛盾 ;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不停机： =&amp;gt; &lt;script type=&quot;math/tex&quot;&gt;R&lt;/script&gt; 的读入为&lt;em&gt;停机&lt;/em&gt;，=&amp;gt;  &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt; 读入 &lt;script type=&quot;math/tex&quot;&gt;(X, X)&lt;/script&gt; 输出为停机 ，=&amp;gt; &lt;script type=&quot;math/tex&quot;&gt;X(X)&lt;/script&gt;停机，矛盾 。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>ssrzz</name></author><category term="halting problem" /><summary type="html">Halting Problem</summary></entry><entry><title type="html">Leetcode Solutions</title><link href="http://localhost:4000/2019/07/03/Leetcode-Solutions/" rel="alternate" type="text/html" title="Leetcode Solutions" /><published>2019-07-03T00:00:00+08:00</published><updated>2019-07-03T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/03/Leetcode-Solutions</id><content type="html" xml:base="http://localhost:4000/2019/07/03/Leetcode-Solutions/">&lt;h2 id=&quot;313-super-ugly-numbers&quot;&gt;313 super ugly numbers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/super-ugly-number/&quot;&gt;Que&lt;/a&gt;:  Super ugly numbers (SUN hereafter) are positive numbers whose all prime factors are in the  given prime list primes of size &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;,  (e.g., primes = [2, 7, 13, 19])  Write a program to find the &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-th super ugly number.&lt;/p&gt;

&lt;h3 id=&quot;method-1-brute-force&quot;&gt;Method 1: Brute Force&lt;/h3&gt;

&lt;p&gt;Idea: searching from 1 to some &lt;script type=&quot;math/tex&quot;&gt;m&gt;&gt;n&lt;/script&gt; to find the &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-th number which is super ugly.&lt;/p&gt;

&lt;p&gt;Comment: bad solution when &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; is large, as we have to decompose each number &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
1 &lt; i &lt; m %]]&gt;&lt;/script&gt; to figure out whether it is super ugly.&lt;/p&gt;

&lt;h3 id=&quot;method-2-generating-suns-incrementally&quot;&gt;Method 2: Generating SUNs incrementally&lt;/h3&gt;

&lt;p&gt;Idea:  First SUN is surely &lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt;, the second SUN is &lt;script type=&quot;math/tex&quot;&gt;\text{min}(primes) = 2&lt;/script&gt; (assuming &lt;script type=&quot;math/tex&quot;&gt;primes=[2,7,13,19]&lt;/script&gt;) , the third ? We have to do some calculations, let &lt;script type=&quot;math/tex&quot;&gt;U = [1, 2]&lt;/script&gt; be the first two generated SUNs, &lt;script type=&quot;math/tex&quot;&gt;C = [p * u  \text{ for } p \in primes \text{  for  } u \in U ] \backslash U&lt;/script&gt;. Then &lt;script type=&quot;math/tex&quot;&gt;U_3 = \text{min}(C) = 4&lt;/script&gt; , making &lt;script type=&quot;math/tex&quot;&gt;U=[1,2,4]&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;By repeating the previous procedure, we can find the &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-th SUN within time &lt;script type=&quot;math/tex&quot;&gt;O(n^2 * m)&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; is the size of &lt;script type=&quot;math/tex&quot;&gt;primes&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Or, we can speed up the procedure by keeping track of numbers we’ve calculated before using an auxiliary array &lt;script type=&quot;math/tex&quot;&gt;idx&lt;/script&gt; , &lt;script type=&quot;math/tex&quot;&gt;idx[i]&lt;/script&gt; means previous  &lt;script type=&quot;math/tex&quot;&gt;(idx[i]-1)&lt;/script&gt; SUNs with one prime factor being &lt;script type=&quot;math/tex&quot;&gt;primes[i]&lt;/script&gt; have been calcuated, with the results stored either in &lt;script type=&quot;math/tex&quot;&gt;U&lt;/script&gt;, or in the candidiate set &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;More specifically, initialize &lt;script type=&quot;math/tex&quot;&gt;idx = [0,0,0,0] , U = [1], C = [p * u  \text{ for } p \in primes \text{  for  } u \in U ] \backslash U = primes&lt;/script&gt; , the second SUN is &lt;script type=&quot;math/tex&quot;&gt;\text{min} (C) = 1 * 2&lt;/script&gt;, we update &lt;script type=&quot;math/tex&quot;&gt;idx = [1(0+1),0,0,0]&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;3-rd SUN is &lt;script type=&quot;math/tex&quot;&gt;min(C')&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;C'  = [U_{idx[0]} * primes[0], U_{idx[1]} * primes[1], …] = [4,7,13,19]&lt;/script&gt;. At this time, the lucky &lt;script type=&quot;math/tex&quot;&gt;primes[i]&lt;/script&gt; remains &lt;script type=&quot;math/tex&quot;&gt;2&lt;/script&gt; with &lt;script type=&quot;math/tex&quot;&gt;i == 0&lt;/script&gt;, so we update &lt;script type=&quot;math/tex&quot;&gt;idx = [2(1+1),0,0,0]&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;4-th: &lt;script type=&quot;math/tex&quot;&gt;C'' = [8,7,13,19], U = [1,2,4,7], idx = [2,1,0,0]&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;5-th: &lt;script type=&quot;math/tex&quot;&gt;C'' = [8,14,13,19], U = [1,2,4,7,8], idx = [3,1,0,0]&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;6-th: &lt;script type=&quot;math/tex&quot;&gt;C'' = [14,14,13,19], U = [1,2,4,7,8,13], idx = [3,1,1,0]&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;Loop until we find the &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-th SUN. Time Complexity &lt;script type=&quot;math/tex&quot;&gt;O(n*m)&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;python-code&quot;&gt;Python code&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nthSuperUglyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ugly&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;factors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ugly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;factors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ugly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;factors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ugly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ugly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;algorithm&quot;&gt;Algorithm&lt;/h1&gt;

&lt;h2 id=&quot;reservoir-sampling&quot;&gt;Reservoir sampling&lt;/h2&gt;

&lt;p&gt;从包含&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;个项目的集合中选取&lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;个样本，其中&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;为一很大或未知的数量，尤其适用于不能把所有项目都存放到内存的情况。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# S is the (large) list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# when k = 1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;证明每个样本被抽取的概率为 &lt;script type=&quot;math/tex&quot;&gt;1/n&lt;/script&gt; . 考虑第&lt;script type=&quot;math/tex&quot;&gt;j \in [0 .. n -1]&lt;/script&gt; 个元素被最终抽到的可能性：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P_j = \frac{1}{j+1} \prod_{i=j+1}^{n-1}1 - \frac{1}{i+1})  = \frac{1}{j+1} \cdot \frac{j+1}{j+2} \cdot \frac{j+2}{j+3} \cdots \frac{n-1}{n-1+1} = \frac{1}{n}&lt;/script&gt;

&lt;p&gt;特别的，当 &lt;script type=&quot;math/tex&quot;&gt;j==n-1, P_{n-1} = \frac{1}{n}&lt;/script&gt; 直接从算法中得出。&lt;/p&gt;

&lt;p&gt;应用&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/linked-list-random-node/description/&quot;&gt;Linked List Random Node&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Todo&lt;/li&gt;
&lt;/ul&gt;</content><author><name>ssrzz</name></author><category term="algorithm" /><category term="python" /><summary type="html">313 super ugly numbers</summary></entry><entry><title type="html">SSH Defense</title><link href="http://localhost:4000/2019/07/03/SSH-Defense/" rel="alternate" type="text/html" title="SSH Defense" /><published>2019-07-03T00:00:00+08:00</published><updated>2019-07-03T00:00:00+08:00</updated><id>http://localhost:4000/2019/07/03/SSH-Defense</id><content type="html" xml:base="http://localhost:4000/2019/07/03/SSH-Defense/">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lastb&lt;/code&gt;  查看失败的SSH登录尝试历史，如果一段时间内出现一连段的相同或相近的IP，那么恭喜，这台服务器被盯上了。&lt;/p&gt;

&lt;p&gt;注： 防护工具也只是工具，不能保护服务器100%安全。 保护好服务器，首先要排除错误选项，包括但不限于： &lt;strong&gt;弱密码、默认端口、不重视异常登录&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;endlessh&quot;&gt;Endlessh&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/skeeto/endlessh&quot;&gt;Endlessh&lt;/a&gt; is an SSH tarpit &lt;a href=&quot;https://nullprogram.com/blog/2019/03/22/&quot;&gt;that &lt;em&gt;very&lt;/em&gt; slowly sends an endless, random SSH banner &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;将计就计，欺骗攻击者，使其客户端(攻击工具或程序) 长时间卡住(数小时或者数日)。&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Usage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endlessh&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LIMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Bind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPv4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Bind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPv6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;millisecond&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endlessh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Maximum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;banner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Maximum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clients&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4096&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Listening&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2222&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diagnostics&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;standard&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repeatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;tips&quot;&gt;Tips&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;爆破手通常会选择直接尝试端口22(多数机器的默认端口，且很多用户未更改)，所以使用endless前先将端口改成一个好记但不常用的端口，比如：8964&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Endlessh 默认监听2222，为了欺骗攻击者，手动指定监听22端口&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;endlessh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用参数 &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; 保持脚本运行日志 &lt;code class=&quot;highlighter-rouge&quot;&gt;endlessh -v -p 22 &amp;gt; end.log&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fail2ban&quot;&gt;Fail2ban&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fail2ban/fail2ban&quot;&gt;Fail2ban&lt;/a&gt; 基于auth日志文件工作，默认情况下它会扫描所有 auth 日志文件，如 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/auth.log&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/apache/access.log&lt;/code&gt; 等，并禁止带有恶意标志的IP，比如密码失败太多。&lt;/p&gt;

&lt;p&gt;Fail2ban 可用于在指定的时间内拒绝 IP 地址，可以发送邮件通知。 Fail2ban能够降低错误认证尝试的速度，但是它不能消除弱认证带来的风险。&lt;/p&gt;

&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fail2ban&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fail2ban&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;git&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fail2ban&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;py&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;## or &lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# For Debian/Ubuntu&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fail2ban&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# For CentOS 6+&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fail2ban&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置&quot;&gt;配置&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/etc/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fail2ban&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;conf&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/etc/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fail2ban&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;conf&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# emacs /etc/fail2ban/local.conf&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ignoreip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;192.168&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bantime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;findtime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;maxretry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# SSH servers&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sshd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%(sshd_log)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;backend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%(sshd_backend)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;不要直接操作主配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;jail.conf&lt;/code&gt;，文件包含一组预定义的过滤器。只要有新的更新，所有配置都会被重置。&lt;/li&gt;
  &lt;li&gt;参数
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ignoreip&lt;/code&gt; 忽略特定IP&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bantime&lt;/code&gt; 被禁时间(单位 second)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;maxtry&lt;/code&gt; 是主机被禁止之前的失败次数&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;findtime&lt;/code&gt; 如果在最近 &lt;code class=&quot;highlighter-rouge&quot;&gt;findtime&lt;/code&gt; 秒期间已经发生了 &lt;code class=&quot;highlighter-rouge&quot;&gt;maxretry&lt;/code&gt; 次重试，则主机会被禁止&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;更改配置后 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl restart fail2ban.service&lt;/code&gt;重启fail2ban.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fail2ban-client status ssh&lt;/code&gt;  获取禁止的 IP ， &lt;code class=&quot;highlighter-rouge&quot;&gt;fail2ban-client set ssh unbanip 1.2.3.4&lt;/code&gt;来释放被ban掉的IP.&lt;/p&gt;</content><author><name>ssrzz</name></author><category term="SSH" /><summary type="html">lastb 查看失败的SSH登录尝试历史，如果一段时间内出现一连段的相同或相近的IP，那么恭喜，这台服务器被盯上了。</summary></entry><entry><title type="html">机器学习笔记</title><link href="http://localhost:4000/2019/06/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" rel="alternate" type="text/html" title="机器学习笔记" /><published>2019-06-25T00:00:00+08:00</published><updated>2019-06-25T00:00:00+08:00</updated><id>http://localhost:4000/2019/06/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0</id><content type="html" xml:base="http://localhost:4000/2019/06/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">&lt;h1 id=&quot;数据表示与特征工程&quot;&gt;数据表示与特征工程&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;什么是one-hot encoding? 为什么需要它?
    &lt;ul&gt;
      &lt;li&gt;也称N取一编码(one -out-of N encoding)，或者虚拟变量(dummy variable)。背后的思想是将&lt;strong&gt;一个分类变量替换一个或者多个特征&lt;/strong&gt; ，新特征取值0或者1.&lt;/li&gt;
      &lt;li&gt;算法(e.g., LR)不能处理非数值型分类变量时，需要对这些变量进行编码。比较直观的做法是采用&lt;strong&gt;integer encoding&lt;/strong&gt; (or label encoding, 整数编码)，将变量映射到一个连续数值集，e.g., [1,2,3,4,…]。 这种方法的弊端在于：算法可能认为数值相近的变量有相关联系，比如{‘black’: 1, ‘red’:2, ‘blue’:3, gray’: 4}，’black’编码后的值与’red’编码后相近，但实际上’black’与’gray’更为相关。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;define-ml&quot;&gt;Define ML&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Arthur Samule(1959): fields of study that gives computers ability to learn without being explicitly programmed.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Samule 曾写了个跳棋(checker)程序，不断训练让程序学习什么是好的move，什么是坏的。尽管Samule本人并不擅长checker，但一个不擅长checker的人在1950s能编写并训练出一个比自己更擅长checker的程序，这是一件很了不起的事情。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tom Mitchell(1998): A computer program is said to learn some experience &lt;script type=&quot;math/tex&quot;&gt;E&lt;/script&gt; w.r.t. some task &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt; and some performance &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt;, if its performance &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt;, as measured by &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt;, improves with experience &lt;script type=&quot;math/tex&quot;&gt;E&lt;/script&gt;.&lt;/p&gt;

    &lt;p&gt;i.e., 关于任务&lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt;的程序&lt;script type=&quot;math/tex&quot;&gt;Pr&lt;/script&gt; 的成绩&lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt;， 正比于从&lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt;中学习到的经验&lt;script type=&quot;math/tex&quot;&gt;E&lt;/script&gt;.&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;P(Pr_T) \propto E(Pr_T)&lt;/script&gt;

    &lt;blockquote&gt;
      &lt;p&gt;上述定义其实是“针对” good ML program，如果一个算法越学越差，本质上也是一个ML算法，但只能算是一个糟糕的算法 (分类问题+准确率极低的算法+结果取反 = 一个准确率还不错的算法？)。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;符号主义人工智能 ？&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Symbolic AI: 通过编写足够多的明确规则来处理知识，就可以实现与人类水平相当的AI.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;体系&quot;&gt;体系&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;什么是AI ?
    &lt;ul&gt;
      &lt;li&gt;AI的本质是, 人类所赋予机器(or 工具)的一种能够解决具备一定难度的问题的能力(the ability to solve certain difficult problems — difficult in the sense that they are not easily solved by humans)，这种能力越强，就能越好的解决问题(e.g., 准确率更高的分类器)。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;数据处理&quot;&gt;数据处理&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;为什么要对数据进行归一化处理？
    &lt;ul&gt;
      &lt;li&gt;做为一个特征，我们希望看到数据的相对值差别对结果的影响，而不是其绝对值。特别地，未做归一化的数据中，取值范围最大的数据将主导诸如kNN算法的结果&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;通俗解释过拟合、欠拟合？
    &lt;ul&gt;
      &lt;li&gt;前者指一个模型过分关注训练数据，但对新数据的泛化性能不好，后者指模型无法获取数据中的所有变化。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;kNN算法优缺点？
    &lt;ul&gt;
      &lt;li&gt;优势 精度高、对异常值不敏感、无数据输入假定&lt;/li&gt;
      &lt;li&gt;缺点 计算、空间复杂度高，无数给出数据的内在含义&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;决策树优缺点？
    &lt;ul&gt;
      &lt;li&gt;计算复杂度不高，输出结果易于理解，对中间值的缺失不敏感，可以处理不相关特征数据&lt;/li&gt;
      &lt;li&gt;得到的模型很容易可视化，非专家也很容易理解&lt;/li&gt;
      &lt;li&gt;算法完全不受数据缩放的影响。每个特征被单独处理，数据的划分也不依赖于缩放，因此决策树算法不需要特征预处理，比如归一化或者标准化&lt;/li&gt;
      &lt;li&gt;缺点 容易过拟合&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Entropy ?
    &lt;ul&gt;
      &lt;li&gt;信息增益(information gain)，指对数据集进行处理之前之后发生的变化。对一个符号&lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; 的信息定义为 &lt;script type=&quot;math/tex&quot;&gt;-\text{log}_2p(x)&lt;/script&gt; 。这是一个 xxx&lt;/li&gt;
      &lt;li&gt;熵定义为信息的期望值 &lt;script type=&quot;math/tex&quot;&gt;H = - \Sigma_i^n p(x_i) \text{log}_2p(x_i)&lt;/script&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;线性回归 ?
    &lt;ul&gt;
      &lt;li&gt;也称普通最小二乘法(ordinary least squares, OLS)，回归问题最简单也最经典的线性方法。线性回归寻找参数 &lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt;与&lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;，使得对训练集的预测值与真实的回归目标值 &lt;script type=&quot;math/tex&quot;&gt;y&lt;/script&gt;之间的&lt;strong&gt;均方误差&lt;/strong&gt;最小。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;岭回归(ridge regression)
    &lt;ul&gt;
      &lt;li&gt;对于高维数据集(即有大量特征的数据集)，线性模型过拟合的可能性变大。 在岭回归中，对系数&lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt;的选择不仅要在训练数据上得到好的预测结果，还要&lt;strong&gt;拟合附加约束&lt;/strong&gt;(E.g., 正则化)。&lt;/li&gt;
      &lt;li&gt;Ridge模型在模型的简单性(系统都接近于0)与训练集性能之间做出权衡。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#决策树、随机森林&lt;/p&gt;

&lt;p&gt;对数据反复进行递归划分，直到每个区域（叶结点）只包含单目标值（单一类别或单一回归值）。&lt;/p&gt;

&lt;p&gt;通常来说，构造决策树直到所有叶结点都是纯的，这会导致模型非常复杂，并且对训练数据高度拟合。典型的特征是：决策边界过于关注远离同类别样本的单个异常点。 这也是决策树的一个主要缺点之一。&lt;/p&gt;

&lt;p&gt;防止过拟合：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;预剪枝(pre-pruning)：限制树的最大深度、叶结点的最大数目、规定一个结点中数据点的最少数据数目&lt;/li&gt;
  &lt;li&gt;后剪枝(post-pruning) 先构造树，随后删除或折叠信息量很少的结点&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;决策树的优点：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;为了克服决策树过拟合的缺点，一个思路是合并多个决策树，即是构建：&lt;/p&gt;

&lt;h3 id=&quot;随机森林&quot;&gt;随机森林&lt;/h3&gt;

&lt;p&gt;随机森林本质是：&lt;strong&gt;多个决策树的组合&lt;/strong&gt;。 背后思想：每棵（决策）树的预测可能都相对较好，但可能对部分数据过拟合，如果构造很多树，并且每棵树的预测都很好，但以不同的方式过拟合，那么对这些树的预测结果取平均值来降低过拟合（对于分类问题，可以采用“软投票(soft voting)”策略，即每个算法做出“软”预测，给出每个可能输出label的概率，所有概率求平均值，输出概率最大标签）。&lt;/p&gt;

&lt;p&gt;随机化方法&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通过选择用于构造树的数据点，比如使用&lt;strong&gt;自助采样(bootstrap sample)&lt;/strong&gt;, 从n_samples个数据点中有放回地随机抽取样本&lt;/li&gt;
  &lt;li&gt;通过选择每次划分测试的特征，每个树随机选择特征的一个子集。潜在问题 a. max_features 过大，比如等于n_features，那么所有树都考虑了全部特征，那么将十分相似 ; b. Max_features过小，比如1，为了更好拟合数据，每棵树都很深&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;随机森林也可以给出特征重要性(由所有树的特征重要性求和再平均)，一般来说，比单棵树给出的可为可靠。&lt;/p&gt;

&lt;h4 id=&quot;优缺点&quot;&gt;优、缺点&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;方法强大：通常不需要反复调节参数就可以得到很好的结果，也不需要对数据进行缩放。有决策树所有优点，也弥补了其过拟合的缺陷。但如果需要以可视化方式向非专家总结预测过程，选单个决策树可能更好。&lt;/li&gt;
  &lt;li&gt;支持多核并行， n_jobs = 9 or -1&lt;/li&gt;
  &lt;li&gt;对于维度非常高的稀疏数据（比如文本数据），RF表现往往不是很好，线性模型可能更适合。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;梯度提升机梯度提升回归树&quot;&gt;梯度提升机（梯度提升回归树）&lt;/h3&gt;

&lt;p&gt;采用连续的方式构造树，每棵树都试图&lt;strong&gt;纠正前一棵树的错误&lt;/strong&gt;。优势，通常使用深度很小(1~5)的树，占用内存少，预测速度更快。&lt;/p&gt;

&lt;p&gt;背后思想：&lt;strong&gt;合并多个简单的模型(弱学习器)，比如深度较小的树。每棵树只能对部分数据做出好的预测，通过添加更多的树，不断迭代提高性能&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;深度很小、占用内在少、预测速度很快 ; 表现很好&lt;/li&gt;
  &lt;li&gt;不需要数据缩放&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;需要仔细调参，训练时间可能会比较长&lt;/li&gt;
  &lt;li&gt;不适用于高维稀疏数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;它对参数设置比rf更为敏感，如果设置得体，精度很高。故经常是ML竞赛优胜者。&lt;/p&gt;

&lt;h3 id=&quot;核支持向量机&quot;&gt;核支持向量机&lt;/h3&gt;

&lt;p&gt;Kernelized support vector machine 通常简称 svm&lt;/p&gt;

&lt;h3 id=&quot;神经网络&quot;&gt;神经网络&lt;/h3&gt;

&lt;p&gt;Q:  缺点？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;功能越强大的神经网络，通常需要更长的训练时间; 还需要仔细的预处理数据&lt;/li&gt;
  &lt;li&gt;调参是一门艺术&lt;/li&gt;
  &lt;li&gt;在“均匀”的数据上表现良好，即特征都具有相似的含义。 如果数据包含不同种类的特征，那么基于树的模型可能表现的更好。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;无监督学习&quot;&gt;无监督学习&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;如何评估无监督学习?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;通常来说，评估监督算法的唯一方法就是 **人工检查 **。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;cnn-卷积神经网络&quot;&gt;CNN 卷积神经网络&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;CNN(convolutional neural networks)
    &lt;ul&gt;
      &lt;li&gt;CNN的基石是卷积层(convolutional layer)。Input layer的接收野(receptive fields, 一个&lt;script type=&quot;math/tex&quot;&gt;m \times n&lt;/script&gt; 像素矩阵)连接第一卷积层的一个神经元，同样，第1卷积层的一个 &lt;script type=&quot;math/tex&quot;&gt;k \times l&lt;/script&gt; 神经元矩阵连接到第2层卷积层。因此，第&lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt;层卷积层的第 &lt;script type=&quot;math/tex&quot;&gt;j, j+1&lt;/script&gt;个神经元所对应的第 &lt;script type=&quot;math/tex&quot;&gt;i-1&lt;/script&gt; 层神经元矩阵可能是重叠的(&lt;script type=&quot;math/tex&quot;&gt;k = l = 1&lt;/script&gt;就不重叠)。有时候为了使第 &lt;script type=&quot;math/tex&quot;&gt;i, i+1&lt;/script&gt; 卷积层长宽一致，会在卷积层周围添加一些 0, 称为&lt;strong&gt;0填充&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;/img/zeropadding.png&quot; alt=&quot;image&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;下采样？
    &lt;ul&gt;
      &lt;li&gt;减少需要处理的特征图的元素个数 ； 通过让连续卷积层的观察窗口越来越大，从而引入空间过滤器的层级结构。&lt;/li&gt;
      &lt;li&gt;最大池化、平均池化、步幅都可以实现下采样； 最大当化效果通常较好。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;VGG-16 v.s. VGG-19
    &lt;ul&gt;
      &lt;li&gt;VGG-16 结构图 &lt;img src=&quot;/img/vgg16.png&quot; alt=&quot;image&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;VGG-16 包含16层深度神经网络层，VGG-19 19 层&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;深度学习&quot;&gt;深度学习&lt;/h1&gt;

&lt;h2 id=&quot;文本与序列&quot;&gt;文本与序列&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;文本向量化(vectorize)实现方法
    &lt;ul&gt;
      &lt;li&gt;将文本转化成数值张量的过程，有以下几种实现方式：&lt;/li&gt;
      &lt;li&gt;将文本分割成&lt;strong&gt;单词&lt;/strong&gt;，并将每个单词转换成一个向量&lt;/li&gt;
      &lt;li&gt;将文本分割成&lt;strong&gt;字符&lt;/strong&gt;，并将每个字符转换成一个向量&lt;/li&gt;
      &lt;li&gt;提取单词或字符的&lt;strong&gt;n-gram&lt;/strong&gt;（多个连续单词或者字符的集合）, 并将每个n-gram转换为一个向量。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;标记(token) 与分词(tokenization) ?
    &lt;ul&gt;
      &lt;li&gt;Token，将文本分解而成的单元（单词、字符或n-gram)&lt;/li&gt;
      &lt;li&gt;Tokenization，文本分解成标记的过程。 所有vectorize过程都是应用某种分词方案，然后将数据向量与生成的标记相关联。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;关联向量与标记的方法 ？
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;One-hot编码&lt;/strong&gt;：每个单词(或字符)与一个唯一的整数索引相关联，然后将这个整数索引 $i$  转换成长度为 $N$（词表大小） 的二进制向量。&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;词嵌入(word embedding)&lt;/strong&gt;: xxx
        &lt;ul&gt;
          &lt;li&gt;完成主任务的同时学习词嵌入&lt;/li&gt;
          &lt;li&gt;预训练词嵌入(pretrained word embedding)，在不同于待解决问题的机器学习任务上预计算好词嵌入，然后将其加载到模型中&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;区别：
        &lt;ul&gt;
          &lt;li&gt;one-hot 二进制、稀疏、高维度(维度大小=词表中单词个数)、硬编码；&lt;/li&gt;
          &lt;li&gt;词嵌入 密集、低维、从数据中学习得到&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>ssrzz</name></author><category term="ml" /><category term="tutorial" /><summary type="html">数据表示与特征工程</summary></entry><entry><title type="html">Golden section search</title><link href="http://localhost:4000/2019/06/23/Golden-section-search/" rel="alternate" type="text/html" title="Golden section search" /><published>2019-06-23T00:00:00+08:00</published><updated>2019-06-23T00:00:00+08:00</updated><id>http://localhost:4000/2019/06/23/Golden-section-search</id><content type="html" xml:base="http://localhost:4000/2019/06/23/Golden-section-search/">&lt;h2 id=&quot;gssgolden-section-search&quot;&gt;GSS(golden section search)&lt;/h2&gt;

&lt;p&gt;GSS is the limit of &lt;a href=&quot;https://en.wikipedia.org/wiki/Golden-section_search&quot;&gt;Fibonacci search&lt;/a&gt;. 通过不断缩小搜索空间，在一个单锋函数(unimodal function)寻找最值。&lt;/p&gt;

&lt;p&gt;以下为寻找&lt;script type=&quot;math/tex&quot;&gt;[a, b]&lt;/script&gt;间使得&lt;script type=&quot;math/tex&quot;&gt;f(x) = (x -2 )^2&lt;/script&gt;最小的&lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;的Python代码&lt;/p&gt;

&lt;h3 id=&quot;idea&quot;&gt;idea&lt;/h3&gt;

&lt;p&gt;假设 &lt;script type=&quot;math/tex&quot;&gt;f(x)&lt;/script&gt;是一个二次函数，在区间&lt;script type=&quot;math/tex&quot;&gt;[a,b]&lt;/script&gt;存在极小值(也必然是最小值，设为 &lt;script type=&quot;math/tex&quot;&gt;x_m&lt;/script&gt;)，在&lt;script type=&quot;math/tex&quot;&gt;[a,b]&lt;/script&gt;间选择两个点&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
c, d (a &lt; c &lt; d &lt; b) %]]&gt;&lt;/script&gt;,显然有&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
f(c) &lt; \text{max}(f(a), f(d)), f(d) &lt; \text{max}(f(a), f(d)) %]]&gt;&lt;/script&gt; .&lt;/p&gt;

&lt;p&gt;如果 &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
f(c) &lt; f(d) %]]&gt;&lt;/script&gt; ，then 必然有 &lt;script type=&quot;math/tex&quot;&gt;x_m \in [a,d]&lt;/script&gt; (&lt;script type=&quot;math/tex&quot;&gt;x_m&lt;/script&gt;也可能位于&lt;script type=&quot;math/tex&quot;&gt;a,c&lt;/script&gt;之间，取决于&lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;的位置)。这时，用&lt;script type=&quot;math/tex&quot;&gt;d&lt;/script&gt;代替&lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;将缩小搜索区间。不断迭代这个过程，直到 &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
abs(a-b) &lt; eps \to 0 %]]&gt;&lt;/script&gt;。那么问题是：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;如何选择 &lt;script type=&quot;math/tex&quot;&gt;c, d&lt;/script&gt; ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;GSS的策略是选择 &lt;script type=&quot;math/tex&quot;&gt;c, d&lt;/script&gt; 使得 &lt;script type=&quot;math/tex&quot;&gt;(d-c) / (c-a) = (c-a) / (b-c)  = (d-c) /(b-d)&lt;/script&gt; 如此，以保证 &lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;即不会太接近于&lt;script type=&quot;math/tex&quot;&gt;a&lt;/script&gt;，或者太接近于&lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;. i.e., &lt;script type=&quot;math/tex&quot;&gt;c - a ==  b - d&lt;/script&gt;. 令 &lt;script type=&quot;math/tex&quot;&gt;x = c - a == b - d, y = d - c&lt;/script&gt;，那么 &lt;script type=&quot;math/tex&quot;&gt;y / x = x / (x + y) =&gt; x^2 = xy + y^2 =&gt; (x/y)^2 - (x/y) = 1&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;求解关系式: &lt;script type=&quot;math/tex&quot;&gt;x/y = \frac{1+\sqrt{5}}{2} = 1.618033988…&lt;/script&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;python progra m for golden section search. &quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'''
    golden section search
    to find the minimum of f on [a,b]
    f: a strictly unimodal function on [a,b], example: f = lambda x: (x-2)**2
    '''&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# eps = 10**-9&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# recompute both c and d here to avoid loss of precision which may lead to incorrect results or infinite loop&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;practice&quot;&gt;Practice&lt;/h3&gt;

&lt;p&gt;如何从一个“山形”列表arr中找出最大值index？&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findMaxElementIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chooseC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.382&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chooseD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.618&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chooseC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chooseD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chooseD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chooseC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# 列表非连接函数，最终x1,x2未必能刚好达到 x1 == x2，以上方法目的将搜索区间快速缩小到一个常数范围，然后暴力求解&lt;/span&gt;

	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>ssrzz</name></author><category term="algorithm" /><category term="golden-section" /><summary type="html">GSS(golden section search)</summary></entry></feed>