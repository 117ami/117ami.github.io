<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-11-04T11:29:54+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Not a Blog</title><author><name></name></author><entry><title type="html">Machine Learning Softwares</title><link href="http://localhost:4000/archives/Machine-Learning-Softwares.html" rel="alternate" type="text/html" title="Machine Learning Softwares" /><published>2019-11-01T00:00:00+08:00</published><updated>2019-11-01T00:00:00+08:00</updated><id>http://localhost:4000/archives/Machine-Learning-Softwares</id><content type="html" xml:base="http://localhost:4000/archives/Machine-Learning-Softwares.html">&lt;h1 id=&quot;tensorflow-20&quot;&gt;TensorFlow 2.0&lt;/h1&gt;

&lt;h2 id=&quot;tfkeras-vs-keras&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tf.keras&lt;/code&gt; V.S. &lt;code class=&quot;highlighter-rouge&quot;&gt;Keras&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Keras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano.&lt;/p&gt;

&lt;p&gt;To understand the relationship between &lt;code class=&quot;highlighter-rouge&quot;&gt;Keras&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.keras&lt;/code&gt;, first, we have to clarify the complicated, intertwined relationship between &lt;code class=&quot;highlighter-rouge&quot;&gt;Keras&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;TensorFlow&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;2015.03.27, &lt;a href=&quot;https://fchollet.com/&quot;&gt;Francois Chollet&lt;/a&gt;(who is also the author of Deep Learning with Python) committed and released the first version of Keras to his GitHub to facilitate his own research and experiments.&lt;/li&gt;
  &lt;li&gt;Due to its easy-to-use API and the explosion of deep learning popularity, many developers, programmers, and machine learning practitioners flocked to Keras&lt;/li&gt;
  &lt;li&gt;Keras’ default backend was Theano (until v1.1.10)&lt;/li&gt;
  &lt;li&gt;Google released TensorFlow on November 9, 2015, Keras started supporting TensorFlow as a backend&lt;/li&gt;
  &lt;li&gt;Eventually, TensorFlow became the most popular backend, Keras v1.1.0 switched to TensorFlow as its default backend&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.keras&lt;/code&gt; submodule was introduced in TensorFlow v1.10.0, the first step in integrating &lt;code class=&quot;highlighter-rouge&quot;&gt;Keras&lt;/code&gt; directly within the TensorFlow package itself.&lt;/li&gt;
  &lt;li&gt;Keras v2.3.0 was released on September 17, 2019. This is the final release of Keras that will support backends other than TensorFlow.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To summary, &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.keras&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Keras&lt;/code&gt; are two separated different modules. &lt;code class=&quot;highlighter-rouge&quot;&gt;Keras&lt;/code&gt; is a high-level API of TensorFlow, and &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.keras&lt;/code&gt; is a submodule of TensorFlow.
It is recommended to use &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.keras&lt;/code&gt; for future projects as the Keras package will only support bug fixes.&lt;/p&gt;

&lt;h1 id=&quot;keras&quot;&gt;Keras&lt;/h1&gt;</content><author><name></name></author><category term="machine learning" /><category term="keras" /><category term="tensorflow" /><summary type="html">TensorFlow 2.0</summary></entry><entry><title type="html">Set up a domain-based Email with Yandex</title><link href="http://localhost:4000/archives/Set-up-a-domain-based-Email-with-Yandex.html" rel="alternate" type="text/html" title="Set up a domain-based Email with Yandex" /><published>2019-10-31T00:00:00+08:00</published><updated>2019-10-31T00:00:00+08:00</updated><id>http://localhost:4000/archives/Set-up-a-domain-based-Email-with-Yandex</id><content type="html" xml:base="http://localhost:4000/archives/Set-up-a-domain-based-Email-with-Yandex.html">&lt;p&gt;搭建个人域名邮箱有很多好处，自定义任意前缀，无需繁琐的注册过程，更不用担心注册信息泄露而成为大数据中的一员。&lt;/p&gt;

&lt;p&gt;域名邮箱搭建有多种方式，我们推荐使用&lt;a href=&quot;https://www.yandex.com&quot;&gt;Yandex&lt;/a&gt;(俄罗斯互联网巨头，旗下搜索引擎在本土市场占有率超60%)的服务来完成这项任务。推荐原因包括但不限于：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;注册相比自行搭建步骤简单&lt;/li&gt;
  &lt;li&gt;由Yandex做担保，稳定可靠，无需自行维护，且比一般小众邮箱更为安全&lt;/li&gt;
  &lt;li&gt;可自定义 1000 个邮箱(前缀)，每个用户10G容量，多开邮箱账号无需门槛&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一言以蔽之，快速、方便、省心。&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;个人域名 (E.g., &lt;a href=&quot;https://www.name.com/referral/388121&quot;&gt;name.com&lt;/a&gt;上$1.99的&lt;code class=&quot;highlighter-rouge&quot;&gt;xyz&lt;/code&gt;域名)&lt;/li&gt;
  &lt;li&gt;Yandex 邮箱 (注册入口 &lt;a href=&quot;https://mail.yandex.com&quot;&gt;mail.yandex.com&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;假设个人域名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;flyingkiwi.me&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;流程&quot;&gt;流程&lt;/h2&gt;
&lt;h3 id=&quot;1-注册yandex-mail&quot;&gt;1. 注册Yandex Mail&lt;/h3&gt;

&lt;p&gt;注册入口 &lt;a href=&quot;https://passport.yandex.com/registration&quot;&gt;passport.yandex.com&lt;/a&gt;。注册过程中会要求提供个人手机号码，如果不想提供，也可以通过设置安全问题来完成注册。&lt;/p&gt;

&lt;p&gt;注：刚注册完的邮箱在24小时内尽量不要发送邮件，有可能被Yandex认定为spammer.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/2019/passport.yandex.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-注册域名邮箱&quot;&gt;2. 注册域名邮箱&lt;/h3&gt;
&lt;p&gt;个人域名邮箱申请入口 &lt;a href=&quot;https://connect.yandex.com/pdd/&quot;&gt;Connect.Yandex&lt;/a&gt;。
&lt;img class=&quot;center&quot; src=&quot;/images/2019/connect.yandex.png&quot; width=&quot;500px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;填入 &lt;code class=&quot;highlighter-rouge&quot;&gt;flyingkiwi.me&lt;/code&gt;进行注册。之后需要确认域名所有权，并将域名委托至 Yandex 服务器。&lt;/p&gt;

&lt;p&gt;确认所有权主要通过以下4种方式 ：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Upload a file to the site directory&lt;/li&gt;
  &lt;li&gt;Add a CNAME record&lt;/li&gt;
  &lt;li&gt;Change the contact address through the registrar&lt;/li&gt;
  &lt;li&gt;Delegate a domain to Yandex servers&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;很多人推荐第3种方法，即设置DNS record，即在DNS控制面板处添加TXT记录&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TXT yandex-verification 87cal27lacla22c2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但实际上第一种方式更快速一些，即直接在服务器(VPS)根目录创建相应文件(&lt;a href=&quot;https://yandex.com/support/domain/setting/confirm.html#way1&quot;&gt;visit for more details&lt;/a&gt;)。基本上在3分钟之内就能被Yandex验证成功。&lt;/p&gt;

&lt;h3 id=&quot;3-配置mx-spf-and-dkim&quot;&gt;3. 配置MX, SPF and DKIM&lt;/h3&gt;
&lt;p&gt;Question : Why ?&lt;/p&gt;

&lt;p&gt;Answer: 邮件服务器解析、降低个人域名邮件被标记为垃圾邮件的风险。&lt;/p&gt;

&lt;h4 id=&quot;配置mx&quot;&gt;配置MX&lt;/h4&gt;
&lt;p&gt;在DNS管理平台上添加 MX 记录，优先级填写 10 
&lt;img class=&quot;center&quot; src=&quot;/images/2019/mx.yandex.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;spf-dkim&quot;&gt;SPF, DKIM&lt;/h4&gt;
&lt;p&gt;
在DNS管理平台上添加 TXT 记录 (&lt;a href=&quot;https://yandex.com/support/domain/set-mail/spf.html&quot;&gt;VISIT for more details&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Name: @  Value: v = spf1 redirect = _spf.yandex.net&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;DKIM signature is used to verify that whether a message really came from the supposed sender.
To do so, we need to create a TXT record for the domain &lt;code class=&quot;highlighter-rouge&quot;&gt;flyingkiwi.me&lt;/code&gt; with a public key signature, which can be generated from &lt;a href=&quot;https://connect.yandex.com/portal/admin/customization/mail&quot;&gt;HERE&lt;/a&gt;. 
For more detail, please visit &lt;a href=&quot;https://yandex.com/support/domain/set-mail/dkim.html&quot;&gt;THIS PAGE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If all the previous steps are strictly followed, we should by now have our own domain-based Mail system. 
Add a new user is simple, just visit &lt;a href=&quot;https://connect.yandex.com/portal/admin/departments/1&quot;&gt;PROTAL.Yandex&lt;/a&gt; and hit &lt;code class=&quot;highlighter-rouge&quot;&gt;add a person&lt;/code&gt;, the rest is straightforward.&lt;/p&gt;

&lt;h2 id=&quot;config-domain-based-email-on-iphone&quot;&gt;Config domain-based email on iPhone&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Passwords &amp;amp; Accounts&lt;/code&gt; ➡ &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Account&lt;/code&gt; ➡ &lt;code class=&quot;highlighter-rouge&quot;&gt;Other&lt;/code&gt; ➡ &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Mail Account&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And then type in &lt;code class=&quot;highlighter-rouge&quot;&gt;i@flyingkiwi.me&lt;/code&gt;(your first domain-based email) and password and go next. Other infos and configurations are shown in the following image.&lt;/p&gt;

&lt;p&gt;Note that, the port for SMTP server &lt;code class=&quot;highlighter-rouge&quot;&gt;smtp.yandex.com&lt;/code&gt; is 465, while the default port given by iPhone is 587.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/2019/iphone.yandex.png&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POP3: pop.yandex.com 995
SMTP smtp.yandex.com 465
IMAP imap.yandex.com 993
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;a-dns-configuration-example&quot;&gt;A DNS configuration example&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/2019/summary.yandex.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="Mail" /><category term="Yandex" /><summary type="html">搭建个人域名邮箱有很多好处，自定义任意前缀，无需繁琐的注册过程，更不用担心注册信息泄露而成为大数据中的一员。</summary></entry><entry><title type="html">How to make life easier with Argparse</title><link href="http://localhost:4000/archives/How-to-make-life-easier-with-Argparse.html" rel="alternate" type="text/html" title="How to make life easier with Argparse" /><published>2019-10-27T00:00:00+08:00</published><updated>2019-10-27T00:00:00+08:00</updated><id>http://localhost:4000/archives/How-to-make-life-easier-with-Argparse</id><content type="html" xml:base="http://localhost:4000/archives/How-to-make-life-easier-with-Argparse.html">&lt;p&gt;When we execute a Python script under command-line, to pass arguments to the script, we usually adopt a strategy like:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@gmail&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;do_something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is fine when the number of arguments is few, say, less than three. 
But when there are dozens of options to choose, codes following the aforementioned style become cumbersome, ugly and hard to debug or to refine whenever it is necessary. 
Lucky for us, with our &lt;a href=&quot;https://docs.python.org/3/library/argparse.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;argparse&lt;/code&gt;&lt;/a&gt; module rescure, codes can also be pretty and tidy even with many arguments.&lt;/p&gt;

&lt;p&gt;This is &lt;code class=&quot;highlighter-rouge&quot;&gt;argparse&lt;/code&gt; module, as been put in the document:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;makes it easy to write user-friendly command-line interfaces.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;argparse&lt;/code&gt; can figure out how to parse arguments out of &lt;code class=&quot;highlighter-rouge&quot;&gt;sys.argv&lt;/code&gt; so we do not have to define it manually. It can also automatically generates help and usage messages and issues errors when users give the program invalid arguments.&lt;/p&gt;

&lt;p&gt;Great, that is exactly what we need in our scripts. 
Now, step 1: embed the module into our script by writting:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;argparse&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# and creating an object
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;examples-and-explanations&quot;&gt;Examples and Explanations&lt;/h1&gt;

&lt;h2 id=&quot;add-argument&quot;&gt;Add argument&lt;/h2&gt;
&lt;p&gt;Call the &lt;code class=&quot;highlighter-rouge&quot;&gt;add_argument()&lt;/code&gt; method to add program argument, the calls tell the object &lt;code class=&quot;highlighter-rouge&quot;&gt;parser&lt;/code&gt; how to take the strings on the command line and turn them into objects. E.g.,&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;--delete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;remove invalid account from&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And by running &lt;code class=&quot;highlighter-rouge&quot;&gt;py prog.py&lt;/code&gt;, the code returns&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DELETE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DELETE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DELETE&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invalid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The help for this program will display&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;prog.py&lt;/code&gt; as the program name (regardless of where the program was invoked from)&lt;/li&gt;
  &lt;li&gt;A new arg &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; we just added&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you desire to display something other than the default &lt;code class=&quot;highlighter-rouge&quot;&gt;prog.py&lt;/code&gt;, you can simply pass a name to the &lt;code class=&quot;highlighter-rouge&quot;&gt;prog=&lt;/code&gt; arg.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'prog=simple_script'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;epilog&quot;&gt;Epilog&lt;/h3&gt;
&lt;p&gt;To display additional description of the program after the description of the arguments. Extra text can be specified using the &lt;code class=&quot;highlighter-rouge&quot;&gt;epilog=&lt;/code&gt; argument to ArgumentParser.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'prog=simple_script'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epilog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Do go visit google.com if you want to know more&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;formatter_class&quot;&gt;formatter_class&lt;/h3&gt;
&lt;p&gt;Classes &lt;code class=&quot;highlighter-rouge&quot;&gt;class argparse.RawDescriptionHelpFormatter, class argparse.RawTextHelpFormatter&lt;/code&gt; help specifying an alternate formatting style. 
For example, to display description in multiple line:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;textwrap&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;prog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'PROG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;formatter_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RawDescriptionHelpFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textwrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dedent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'''&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;         Please do not mess up this text!
         --------------------------------
             1. information line 1
             2. information line 2
             ...
             998. information line 998
         '''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Presents:
&lt;img class=&quot;center&quot; src=&quot;/images/2019/python-argparse-1.png&quot; width=&quot;50px&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="Python" /><category term="Script" /><summary type="html">When we execute a Python script under command-line, to pass arguments to the script, we usually adopt a strategy like:</summary></entry><entry><title type="html">Gradient Descent</title><link href="http://localhost:4000/archives/Gradient-Descent.html" rel="alternate" type="text/html" title="Gradient Descent" /><published>2019-10-20T00:00:00+08:00</published><updated>2019-10-20T00:00:00+08:00</updated><id>http://localhost:4000/archives/Gradient-Descent</id><content type="html" xml:base="http://localhost:4000/archives/Gradient-Descent.html">&lt;h2 id=&quot;梯度gradient&quot;&gt;梯度(Gradient)&lt;/h2&gt;
&lt;p&gt;梯度是张量运算的导数，是导数这一概念向多元函数导数的推广。&lt;/p&gt;

&lt;p&gt;GD的优势：简单、有效，对于凸函数(convex)来说，GD总能很快找到最小值。 相应的，对于非凸函数(non-convex)，GD可能会陷入到一个局部最小值，而无法收敛到全局最小值。&lt;/p&gt;

&lt;p&gt;为了使网络收敛，改进方案: &lt;strong&gt;改变学习速率&lt;/strong&gt; 、 &lt;strong&gt;use momentum&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;rmsprop-optimizer&quot;&gt;RMSprop Optimizer&lt;/h2&gt;

&lt;h2 id=&quot;sgd&quot;&gt;SGD&lt;/h2&gt;
&lt;p&gt;缺点：如果函数的形状非均向(anisotropic)，比如呈延伸状，那么寻找最小值的路径将非常低效。其根本原因在于，梯度的方向并没有指向最小值的方向。&lt;/p&gt;

&lt;h2 id=&quot;小批量随机梯度下降mini-batch-stochastic-gradient-descent&quot;&gt;小批量随机梯度下降(mini-batch stochastic gradient descent)&lt;/h2&gt;
&lt;p&gt;思想：从样本中抽取训练样本&lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;和对应目标，然后在&lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;上运行网络。&lt;/p&gt;</content><author><name></name></author><category term="Macgine Learning" /><category term="gd" /><summary type="html">梯度(Gradient) 梯度是张量运算的导数，是导数这一概念向多元函数导数的推广。</summary></entry><entry><title type="html">Materials on Machine Learning</title><link href="http://localhost:4000/archives/Materials-on-Machine-Learning.html" rel="alternate" type="text/html" title="Materials on Machine Learning" /><published>2019-10-20T00:00:00+08:00</published><updated>2019-10-20T00:00:00+08:00</updated><id>http://localhost:4000/archives/Materials-on-Machine-Learning</id><content type="html" xml:base="http://localhost:4000/archives/Materials-on-Machine-Learning.html">&lt;h2 id=&quot;image-classification&quot;&gt;Image Classification&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1502.01852v1.pdf&quot;&gt;Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;documents&quot;&gt;Documents&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tensorflow.org/guide/keras/overview&quot;&gt;tf.keras document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="machine learning" /><category term="papers" /><summary type="html">Image Classification Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification</summary></entry><entry><title type="html">Basic Math in Machine Learning</title><link href="http://localhost:4000/archives/Basic-Math-in-Machine-Learning.html" rel="alternate" type="text/html" title="Basic Math in Machine Learning" /><published>2019-10-14T00:00:00+08:00</published><updated>2019-10-14T00:00:00+08:00</updated><id>http://localhost:4000/archives/Basic-Math-in-Machine-Learning</id><content type="html" xml:base="http://localhost:4000/archives/Basic-Math-in-Machine-Learning.html">&lt;h1 id=&quot;随机变量及分布&quot;&gt;随机变量及分布&lt;/h1&gt;

&lt;h2 id=&quot;正态分布&quot;&gt;正态分布&lt;/h2&gt;

&lt;p&gt;若随机变量&lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;的密度函数为&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(x) = \frac{1}{\sqrt{2\pi} \sigma} e^{-\frac{(x-\mu)^2}{2\sigma^2}}, -\infty \le x \le \infty&lt;/script&gt;

&lt;p&gt;则称 &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; 服从正态分布，记作 &lt;script type=&quot;math/tex&quot;&gt;X \sim N(\mu, \sigma^2)&lt;/script&gt;。其分布函数&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;F(x) = \frac{1}{\sqrt{2\pi}\sigma} \int_{- \infty}^x  e^{-\frac{(t-\mu)^2}{2\sigma^2}} dt&lt;/script&gt;

&lt;p&gt;正态分布由两个参数决定 &lt;script type=&quot;math/tex&quot;&gt;\mu, \sigma&lt;/script&gt;：&lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt;决定密度函数的位置，称为位置参数； &lt;script type=&quot;math/tex&quot;&gt;\sigma&lt;/script&gt;决定函数的尺度，称为尺度函数。&lt;/p&gt;

&lt;p&gt;特别的，当&lt;script type=&quot;math/tex&quot;&gt;\mu=0, \sigma=1&lt;/script&gt;的正态分布&lt;script type=&quot;math/tex&quot;&gt;N(0, 1)&lt;/script&gt;为标准正态分布。&lt;/p&gt;

&lt;h3 id=&quot;一般正态分布的标准化&quot;&gt;一般正态分布的标准化&lt;/h3&gt;

&lt;p&gt;定理：若&lt;script type=&quot;math/tex&quot;&gt;X \sim N(\mu, \sigma^2)&lt;/script&gt;，则&lt;script type=&quot;math/tex&quot;&gt;U = (X - \mu) / \sigma \sim N(0, 1)&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;这个定理表明一般正态分布都可以通过一个线性变换化成标准正态分布。&lt;/p&gt;

&lt;h3 id=&quot;正态分布期望与方差&quot;&gt;正态分布期望与方差&lt;/h3&gt;
&lt;p&gt;标准正态分布&lt;script type=&quot;math/tex&quot;&gt;U&lt;/script&gt;的期望为 &lt;script type=&quot;math/tex&quot;&gt;E(U) = 1/\sqrt{2\pi} \int_{- \infty}^{\infty} u e^{-\frac{u^2}{2}} du&lt;/script&gt;，可以看到被积函数是一个奇函数(i.e., &lt;script type=&quot;math/tex&quot;&gt;\forall x \in \mathcal{D}, f(-x) = - f(x)&lt;/script&gt;)，因此积分值为0，即 &lt;script type=&quot;math/tex&quot;&gt;E(U) = 0&lt;/script&gt;。&lt;/p&gt;

&lt;p&gt;对于一般分布 &lt;script type=&quot;math/tex&quot;&gt;X = \mu + \sigma U&lt;/script&gt;，由期望的线性性得到： &lt;script type=&quot;math/tex&quot;&gt;E(X) = \mu + \sigma \times 0 = \mu&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;标准分布的方差&lt;script type=&quot;math/tex&quot;&gt;\text{Var}(U) = 1&lt;/script&gt;(证明略)，由方差的性质可得一般正态分布的方差 &lt;script type=&quot;math/tex&quot;&gt;\text{Var}(X) = \text{Var}(\sigma U + \mu) = \sigma^2 \text{Var}(U) = \sigma^2&lt;/script&gt;&lt;/p&gt;</content><author><name></name></author><category term="Macgine Learning" /><category term="Math" /><summary type="html">随机变量及分布</summary></entry><entry><title type="html">Learn Deep Learning</title><link href="http://localhost:4000/archives/Learn-Deep-Learning.html" rel="alternate" type="text/html" title="Learn Deep Learning" /><published>2019-09-25T00:00:00+08:00</published><updated>2019-09-25T00:00:00+08:00</updated><id>http://localhost:4000/archives/Learn-Deep-Learning</id><content type="html" xml:base="http://localhost:4000/archives/Learn-Deep-Learning.html">&lt;p&gt;20世纪40~60年代，控制论(cybernetics)。随着生物学习理论的发展与第一个模型的实现(如感知机1958)，能实现单个神经元的训练。&lt;/p&gt;

&lt;!--break--&gt;

&lt;h1 id=&quot;历史&quot;&gt;历史&lt;/h1&gt;

&lt;h2 id=&quot;三次浪潮&quot;&gt;三次浪潮&lt;/h2&gt;
&lt;p&gt;20世纪40~60年代，控制论(cybernetics)。随着生物学习理论的发展与第一个模型的实现(如感知机1958)，能实现单个神经元的训练。&lt;/p&gt;

&lt;h3 id=&quot;联结主义&quot;&gt;联结主义&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;20世纪80~90年代(1980~1995)，联结主义(connectionism)，其中心思想是，当网络将大量简单的计算单元连接在一起时可能实现智能行为。&lt;/li&gt;
  &lt;li&gt;联结主义是在认知科学的背景下出现的，20世纪80年代初期，大多数认知科学家研究符号推理模型，但很难解释大脑如何真正使用神经元实现推理功能。&lt;/li&gt;
  &lt;li&gt;成就
    &lt;ul&gt;
      &lt;li&gt;反向传播在训练具有内部表示的深度神经网络中的成功使用，以及反向传播算法的普及&lt;/li&gt;
      &lt;li&gt;LSTM(long short-term memory)的引入(Hochreiter &amp;amp; Schmidhuber,1997)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;尽管这个阶段提出的很多算法在今天都表现的很好，神经网络研究的浪潮还是在20世纪90年代中期逐渐衰退，总结下来，至少归因于以下几点:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;计算机软硬件基础设施发展滞后，以当时计算机硬件的水准，很难训练出足够水平的神经网络。&lt;/li&gt;
  &lt;li&gt;基于神经网络的创业公司野心勃勃但不切实际，令投资者失望&lt;/li&gt;
  &lt;li&gt;机器学习的其他领域，比如核方法(Boser et al. 1992)和图模型(Jordan, 1998)取得进步，并在很多重要任务上实现了很好的效果。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2006~now，深度学习的复兴&lt;/p&gt;

&lt;h2 id=&quot;deep-learning-vs-ai&quot;&gt;Deep Learning v.s. AI&lt;/h2&gt;

&lt;p&gt;许多AI任务可以通过&lt;strong&gt;提取一个合适特征，然后将这些特征提供给简单的机器学习算法&lt;/strong&gt;来解决问题。 但提取哪些特征是一个难题，解决这个问题的途径之一是&lt;strong&gt;使用机器学习来发掘表示本身&lt;/strong&gt;，这种方法称为：表示学习(representation learning)。&lt;/p&gt;

&lt;p&gt;典型例子：自编码器(autoencoder)。学习到的表示往往比手动设计的表示表现的要好，且只需极少人工干预。&lt;/p&gt;

&lt;p&gt;表示学习的一个困难在于：多个变差因素同时影响着我们能够观察到的每一个数据，从原始数据是抽取高层次、抽象的特征非常困难。深度学习通过其他简单的表示来表达复杂表示，这解决了表示学习的核心问题。
典型例子：前馈深度网络。&lt;/p&gt;

&lt;p&gt;总：DL是ML的一种，是一种能够使用计算机系统从数据和经验中得到提升的技术。&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt; 
    &lt;img src=&quot;/images/dl.vs.ai.png&quot; width=&quot;500px&quot; /&gt;
&lt;/p&gt;

&lt;!-- Math --&gt;
&lt;h1 id=&quot;basic-math&quot;&gt;Basic Math&lt;/h1&gt;

&lt;h2 id=&quot;线性相关与生成子空间&quot;&gt;线性相关与生成子空间&lt;/h2&gt;
&lt;p align=&quot;center&quot;&gt;  $$ Ax = b  $$ &lt;/p&gt;
&lt;p&gt;其中 &lt;script type=&quot;math/tex&quot;&gt;A \in \mathrm{R}^{m \times n}&lt;/script&gt; matrix, &lt;script type=&quot;math/tex&quot;&gt;b \in \mathrm{R}^n&lt;/script&gt; vector。对于上面的方程组来说，要么不存在解，要么存在唯一解或者无穷解，不可能存在大于1但小于无穷个解的情况 (不然，两个解的线性组合 &lt;script type=&quot;math/tex&quot;&gt;\alpha x + (1-\alpha)y&lt;/script&gt;也是方程组的解)。&lt;/p&gt;

&lt;h3 id=&quot;方程在每一点存在解的必要条件-n-geq-m&quot;&gt;方程在每一点存在解的必要条件 &lt;script type=&quot;math/tex&quot;&gt;n \geq m&lt;/script&gt;&lt;/h3&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;Ax = \Sigma_{i\in[1,n]} x_i A_{:, i} = \Sigma_i c_i v^{(i)}&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;v^{(i)}&lt;/script&gt; 是&lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;的列向量。 判定以上方程组是否存在解，即判定&lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt;是否在&lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;的生成子空间中。 这个特殊的生成子空间称为&lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;的&lt;strong&gt;列空间&lt;/strong&gt;或&lt;strong&gt;值域(range)&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;因为 &lt;script type=&quot;math/tex&quot;&gt;b \in \mathrm{R^m}&lt;/script&gt;，如果 &lt;script type=&quot;math/tex&quot;&gt;\mathrm{R}^m&lt;/script&gt; 中一个点不在 &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; 的列空间中，那该点对应的 &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt; 没有解，因此 &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; 至少有 &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; 列，即 &lt;script type=&quot;math/tex&quot;&gt;n \geq m&lt;/script&gt;。 举例，&lt;script type=&quot;math/tex&quot;&gt;m = 3, n = 2&lt;/script&gt;，那么无论 &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; 如何变化，它只能将 &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; 映射到 &lt;script type=&quot;math/tex&quot;&gt;\mathrm{R}^3&lt;/script&gt;的一个平面，只有当 &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt; 处于这个平面时， 方程才有解。&lt;/p&gt;

&lt;h3 id=&quot;存在解的充分条件&quot;&gt;存在解的充分条件&lt;/h3&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;n \geq m&lt;/script&gt; 并不能保证方程一定存在解，因为列向量可能&lt;strong&gt;线性相关&lt;/strong&gt;，即某一个向量可能表示为其他一组向量的线性组合。要使其列空间涵盖整个 &lt;script type=&quot;math/tex&quot;&gt;\mathrm{R}^m&lt;/script&gt;， 需要满足什么条件 ？&lt;/p&gt;

&lt;p&gt;Ans: 矩阵必须包含&lt;strong&gt;至少一组&lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt;个线性无关&lt;/strong&gt;的向量。&lt;/p&gt;

&lt;!-- &gt; 方程 $$Ax=b$$ 对每一个$$b$$都有解的充分必要条件：向量集恰好有$$m$$个线性不相关的向量，而非至少有$$m$$个。 二者还有有区别的。因为至少有$$m$$个包含了 --&gt;

&lt;p&gt;但要使矩阵可逆，需要保证对每一个 &lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt; 至多只有一个解，因此要保证矩阵至多只有 &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; 个列向量，即必须是一个方阵(square)，且所有列向量线性无关。这样的矩阵称为 &lt;strong&gt;奇异矩阵&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&quot;特征分解&quot;&gt;特征分解&lt;/h3&gt;
&lt;p&gt;矩阵 &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; 的&lt;strong&gt;特征向量(eigenvector)&lt;/strong&gt;是指与 &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; 相乘后相当于对该向量进行缩放的非零向量 &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt;:  &lt;script type=&quot;math/tex&quot;&gt;Av = \lambda v&lt;/script&gt; ，
其中标题 &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; 称为这个特征向量对应的&lt;strong&gt;特征值(eigenvalue)&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果 &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; 是 &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; 的特征向量，那么任意缩放后的向量 &lt;script type=&quot;math/tex&quot;&gt;sv(s \in \mathrm{R}, s \neq 0)&lt;/script&gt; 也是 &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; 的特征向量&lt;/li&gt;
  &lt;li&gt;假设 &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; 有 &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; 个线性无关的特征向量  &lt;script type=&quot;math/tex&quot;&gt;\{v_1, ..., v_n\}&lt;/script&gt; ，对应的特征值  &lt;script type=&quot;math/tex&quot;&gt;\{\lambda_1, ..., \lambda_n\}&lt;/script&gt; 。将这些特征向量连接成一个矩阵  &lt;script type=&quot;math/tex&quot;&gt;V = \{v^{(1)}, ..., v^{(n)}\}&lt;/script&gt; ，那么有 &lt;script type=&quot;math/tex&quot;&gt;AV = V \text{diag}(\lambda) ( \text{ where }\lambda = [\lambda_1, ..., \lambda_n ]^T)&lt;/script&gt;，进一步地，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;  $$A = V \text{diag}(\lambda) V^{-1}$$  &lt;/p&gt;
&lt;p&gt;其中&lt;/p&gt;

&lt;h3 id=&quot;奇异值分解&quot;&gt;奇异值分解&lt;/h3&gt;
&lt;p&gt;将矩阵分解为奇异向量(singular vector)和奇异值(singular value)的方法称为奇异值分解(singular value decomposition SVD).
每个实数矩阵都有一个SVD，但不一定有特征分解，e.g., 非方阵的矩阵没有特征分解。&lt;/p&gt;

&lt;!-- ## 行列式
### 主成分分析(principle component analysis PCA)
* Goal ?
 --&gt;

&lt;h1 id=&quot;概率与信息论&quot;&gt;概率与信息论&lt;/h1&gt;
&lt;p&gt;概率率是&lt;strong&gt;表示不确定性声明的数学框架&lt;/strong&gt;。它提供了量化不确定性的方法，也提供也用于推导新的不确定性声明的公理 。&lt;/p&gt;

&lt;p&gt;对于AI系统有两个方面的用途：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;概率法则告诉我们AI系统如何推理，据此我们可以设计一些算法或者估算由概率论导出来的表达式&lt;/li&gt;
  &lt;li&gt;可以用概率与统计从理论上分析我们提出的AI系统的行为&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;不确定性的来源：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;被建模系统内在的随机性&lt;/li&gt;
  &lt;li&gt;不完全观测&lt;/li&gt;
  &lt;li&gt;不完全建模, e.g., 用离散化的空间建模连续空间&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;概率分布&quot;&gt;概率分布&lt;/h2&gt;
&lt;p&gt;Probability distribution 描述了随机变量或者一簇随机变量在每一个可能取到的状态的可能性大小。&lt;/p&gt;

&lt;h3 id=&quot;离散型变量&quot;&gt;离散型变量&lt;/h3&gt;
&lt;p&gt;可以&lt;strong&gt;概率质量函数(probability mass function PMF)&lt;/strong&gt;描述。举例&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Bernoulli分布，单个二值随机变量分布：  &lt;script type=&quot;math/tex&quot;&gt;x \sim P(x), P(x) = \phi^x(1-\phi)^{(1-x)}&lt;/script&gt; ，其中 &lt;script type=&quot;math/tex&quot;&gt;\phi&lt;/script&gt;  给出了随机变量 &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; 等于1的概率&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;连续性变量&quot;&gt;连续性变量&lt;/h3&gt;
&lt;p&gt;可以用&lt;strong&gt;概率密码函数(probability density function)&lt;/strong&gt;刻画。&lt;/p&gt;

&lt;h3 id=&quot;常用概率分布&quot;&gt;常用概率分布&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;正态分布(normal distribution)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  $$\mathcal{N}(x; \mu, \sigma^2) = \sqrt{\frac{1}{2\pi\sigma^2}}\text{exp}(- \frac{1}{2\sigma^2}(x - \mu)^2)$$  &lt;/p&gt;
&lt;p&gt;ND由两个参数决定  &lt;script type=&quot;math/tex&quot;&gt;\mu \in \mathrm{R}, \sigma \in (0, \infty)&lt;/script&gt; , 前者给出中心峰值的座标，即分布的均值； 后者是分布的标准差，控制分布的宽度。&lt;/p&gt;

&lt;p&gt;在缺乏关于某个实数上分布的先验知识时，正态分布是一个比较好的选择。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;中心极限定理表明很多独立随机变量的和近似服从正态分布。&lt;/li&gt;
  &lt;li&gt;在具有相同方差的所有可能的概率分布中，正态分布在实数上具有最大的不确定性。即正态分布是对模型加入的先验知识量最少的分布。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;指数分布与Laplace分布&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  $$p(x; \lambda) =  \lambda 1_{x\geq 0} \text{exp}(-\lambda x)$$ &lt;/p&gt;
&lt;p&gt;指数函数  &lt;script type=&quot;math/tex&quot;&gt;1_{x \geq 0} = 0 \text{ if } x \le 0 \text{ else } 1&lt;/script&gt; .&lt;/p&gt;

&lt;p&gt;Laplace分布允许在任意一点  &lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt;  设置概率质量函数的峰值：&lt;/p&gt;
&lt;p&gt; $$\text{Laplace}(x; \mu, \gamma) = \frac{1}{2r} \text{exp} (- \frac{\lfloor x - \mu \rfloor}{\gamma})$$ &lt;/p&gt;

&lt;p&gt;To read p103&lt;/p&gt;

&lt;h1 id=&quot;machine-learning-basics&quot;&gt;Machine Learning basics&lt;/h1&gt;
&lt;p&gt;ML本质上属于&lt;strong&gt;应用统计学&lt;/strong&gt;，更多的关注于如何用计算机统计的估算复杂函数，而不太关注为这些函数提供置信空间。&lt;/p&gt;

&lt;p&gt;P 145&lt;/p&gt;

&lt;h1 id=&quot;深度前馈网络deep-feedforward-network&quot;&gt;深度前馈网络(Deep Feedforward Network)&lt;/h1&gt;
&lt;p&gt;也称前馈神经网络，或多层感知机(multilayer perceptron, MLP)。 其目的是近似某个函数  &lt;script type=&quot;math/tex&quot;&gt;f^*&lt;/script&gt;。直观上，FNN可以理解为实现统计泛化而设计出的函数近似机。&lt;/p&gt;

&lt;p&gt;模型称为前向的，因为信息流过&lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt;的函数，流经用于定义&lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt;的中间计算过程，最终到达输出&lt;script type=&quot;math/tex&quot;&gt;y&lt;/script&gt;。在模型的输出和模型本身之间没有反馈(feedback)连接。 当前馈神经网络被扩展包含反馈连接时，它们被称为循环神经网络(recurrent neural network)&lt;/p&gt;

&lt;h3 id=&quot;代价函数&quot;&gt;代价函数&lt;/h3&gt;

&lt;p&gt;贯穿神经网络设计的一个主题是代价函数的梯度必须足够大和具有足够的预测性，来为学习算法提供一个好的指引。&lt;/p&gt;

&lt;h3 id=&quot;线性函数不能表示xor函数&quot;&gt;线性函数不能表示XOR函数&lt;/h3&gt;
&lt;p&gt;XOR函数是两个二进制&lt;script type=&quot;math/tex&quot;&gt;x_1, x_2&lt;/script&gt;的运算。假设存在一个可以表示XOR的线性模型&lt;script type=&quot;math/tex&quot;&gt;\mathcal{M}&lt;/script&gt;, 当&lt;script type=&quot;math/tex&quot;&gt;x_1=0&lt;/script&gt;时，模型随着&lt;script type=&quot;math/tex&quot;&gt;x_2&lt;/script&gt;的增大而增大。当&lt;script type=&quot;math/tex&quot;&gt;x_1=1&lt;/script&gt;时，模型的输出随着&lt;script type=&quot;math/tex&quot;&gt;x_2&lt;/script&gt;的增大而减小。因为线性模型关于变量的系数是固定的，特别的，假设其关于&lt;script type=&quot;math/tex&quot;&gt;x_2&lt;/script&gt;的系数为&lt;script type=&quot;math/tex&quot;&gt;w_2&lt;/script&gt;。由上面讨论可知，&lt;script type=&quot;math/tex&quot;&gt;w_2&lt;/script&gt;依赖于&lt;script type=&quot;math/tex&quot;&gt;x_1&lt;/script&gt;，因此不可能固定，矛盾。&lt;/p&gt;</content><author><name></name></author><category term="Deep Learning" /><category term="AI" /><summary type="html">20世纪40~60年代，控制论(cybernetics)。随着生物学习理论的发展与第一个模型的实现(如感知机1958)，能实现单个神经元的训练。</summary></entry><entry><title type="html">Text processing in deep learning</title><link href="http://localhost:4000/archives/Text-processing-in-deep-learning.html" rel="alternate" type="text/html" title="Text processing in deep learning" /><published>2019-09-09T00:00:00+08:00</published><updated>2019-09-09T00:00:00+08:00</updated><id>http://localhost:4000/archives/Text-processing-in-deep-learning</id><content type="html" xml:base="http://localhost:4000/archives/Text-processing-in-deep-learning.html">&lt;h2 id=&quot;处理文本数据&quot;&gt;处理文本数据&lt;/h2&gt;

&lt;p&gt;向量与标记相关联的方式有很多种，比较常用的有&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;one-hot编码(one-hot encoding)&lt;/li&gt;
  &lt;li&gt;标记嵌入(token embedding)，通常只用于单词，也称词嵌入(word embedding)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;one-hot-encoding&quot;&gt;one-hot encoding&lt;/h3&gt;
&lt;p&gt;以下假设每个单元都为一个单词。&lt;/p&gt;

&lt;p&gt;one-hot encoding 将每个标记与一个唯一的整数索引相关联，然后将这个整数索引&lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt;转换成长度为&lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;的binary向量，这个向量只有第&lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt;个元素是1，其余为0.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Keras&lt;/code&gt;的内置函数可以完成对原始文本数据进行单词级或字符级的one-hot编码。这些函数还提供了许多特性，比如去除特殊字符、只考虑数据集中前&lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;个最常见单词。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'The cat sat on the mat.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'The dog ate my homework'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.preprocessing.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tokenizer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tokenizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_words&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_on_texts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# [[1, 2, 3, 4, 1, 5], [1, 6, 7, 8, 9]] 
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequences&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts_to_sequences&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;one_hot_results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts_to_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'binary'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# {'the': 1, 'cat': 2, 'sat': 3, 'on': 4, 'mat': 5, 'dog': 6, 'ate': 7, 'my': 8, 'homework': 9}
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;词嵌入&quot;&gt;词嵌入&lt;/h3&gt;

&lt;p&gt;使用密集向量(低维的浮点数向量)来表示。&lt;/p&gt;

&lt;p&gt;获取词嵌入的两种方法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在完成主任务的同时学习词嵌入&lt;/li&gt;
  &lt;li&gt;预训练词嵌入：在其他任务上预计算好词嵌入，然后将其加载到模型中&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对第1种方法，&lt;code class=&quot;highlighter-rouge&quot;&gt;keras&lt;/code&gt; 提供了&lt;code class=&quot;highlighter-rouge&quot;&gt;Embedding&lt;/code&gt;层来学习词嵌入。&lt;code class=&quot;highlighter-rouge&quot;&gt;Embedding&lt;/code&gt;层的作用可以理解为一种字典查找，输入是一个二维张量&lt;code class=&quot;highlighter-rouge&quot;&gt;(samples, seq_length)&lt;/code&gt;，输出三维浮点数张量 &lt;code class=&quot;highlighter-rouge&quot;&gt;(samples, seq_length, embedding_dimensionality)&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;单词索引  -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Embedding&lt;/code&gt;层 -&amp;gt; 对应的词向量&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;词袋&quot;&gt;词袋&lt;/h3&gt;

&lt;p&gt;文本的一种表示方式，本质上是一个集合，其舍弃了文本中的语法结构。&lt;/p&gt;

&lt;h3 id=&quot;imdb-数据集&quot;&gt;IMDB 数据集&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://ai.stanford.edu/~amaas/data/sentiment/&quot;&gt;Large Movie Review Database&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mng.bz/0tIo&quot;&gt;Movie Review Database-2&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tips: 解压数据集后得到结果：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;data/aclImdb/
├── &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
│   ├── neg
│   ├── pos
└── train
    ├── neg
    ├── pos
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一次性读入数据可以采用&lt;code class=&quot;highlighter-rouge&quot;&gt;sklearn&lt;/code&gt;内置函数处理，而不用手动写函数&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.datasets&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_files&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data/aclImdb/train/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data/aclImdb/test/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;小结&quot;&gt;小结&lt;/h2&gt;</content><author><name></name></author><category term="deep learning" /><summary type="html">处理文本数据</summary></entry><entry><title type="html">Linux memo</title><link href="http://localhost:4000/archives/Linux-memo.html" rel="alternate" type="text/html" title="Linux memo" /><published>2019-09-09T00:00:00+08:00</published><updated>2019-09-09T00:00:00+08:00</updated><id>http://localhost:4000/archives/Linux-memo</id><content type="html" xml:base="http://localhost:4000/archives/Linux-memo.html">&lt;p&gt;Just memo, not a blog.&lt;/p&gt;

&lt;h2 id=&quot;文件传输&quot;&gt;文件传输&lt;/h2&gt;
&lt;h3 id=&quot;wget&quot;&gt;wget&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-b&lt;/code&gt;, background 后台执行， &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; 断点续传&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-q&lt;/code&gt;, quiet mode&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-i filenames.txt&lt;/code&gt;，下载&lt;code class=&quot;highlighter-rouge&quot;&gt;filenames.txt&lt;/code&gt;中多个文件&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wget -r -np -nd http://example.com/packages/&lt;/code&gt;， &lt;code class=&quot;highlighter-rouge&quot;&gt;-np --no-parent&lt;/code&gt; 不遍历父目录，&lt;code class=&quot;highlighter-rouge&quot;&gt;-nd&lt;/code&gt; 不在本机重新创建目录结构&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--restrict-file-names=nocontrol&lt;/code&gt;避免中文乱码&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;youtube-dl&quot;&gt;youtube-dl&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;youtube-dl -f best url&lt;/code&gt;, 自动下载音视频质量最好的格式&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 url&lt;/code&gt;,如果以上命令出错，可以考虑使用这条&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;内容查看与编辑&quot;&gt;内容查看与编辑&lt;/h2&gt;
&lt;h3 id=&quot;tree&quot;&gt;tree&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-L 2&lt;/code&gt;, 深度设为2&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tr--translate-characters&quot;&gt;tr – translate characters&lt;/h3&gt;
&lt;p&gt;语法&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;usage: &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Ccsu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; string1 string2
       &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Ccu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; string1
       &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Ccu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; string1
       &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Ccu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ds&lt;/span&gt; string1 string2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;E.g., Translate to text to uppercase&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;somefile.txt | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;:lower:] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;:upper:] &lt;span class=&quot;c&quot;&gt;# or, simply&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;somefile.txt | &lt;span class=&quot;nb&quot;&gt;tr &lt;/span&gt;a-z A-Z
&lt;span class=&quot;c&quot;&gt;# Translate white-space to tabs&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;How are you?&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;:space:] &lt;span class=&quot;s1&quot;&gt;'\t'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#Translate braces into parenthesis&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;somefile.txt | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'()'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#Squeeze repetition of characters using `-s` | 合并重复字符 &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Oh soooooooo             much space&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;:space:] &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#Delete specified characters using -d option (区分大小写)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Terrible test&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'t'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#取反 `-c`，比如只保留数字&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;char char 8742&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;:digit:]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;shred&quot;&gt;shred&lt;/h3&gt;

&lt;p&gt;Safely overwrite and remove files.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shred [options] file&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt;  overwrite n times, default &lt;code class=&quot;highlighter-rouge&quot;&gt;n=3&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; verbose&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-z&lt;/code&gt; add final overwrite with zeros to hiding shredding&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-u&lt;/code&gt; remove file after overwritting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: &lt;code class=&quot;highlighter-rouge&quot;&gt;rm t.txt&lt;/code&gt; 并没有真正删除文件，只是删除了文件的索引，文件内容还在磁盘上。&lt;/p&gt;

&lt;h2 id=&quot;树莓派&quot;&gt;树莓派&lt;/h2&gt;

&lt;h3 id=&quot;ssh卡顿&quot;&gt;SSH卡顿&lt;/h3&gt;
&lt;p&gt;ssh登录后反应很慢，&lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;命令都响应半天。重启多次，还是一样结果。
与战略伙伴&lt;a href=&quot;www.google.com&quot;&gt;Google&lt;/a&gt;进行沟通后发现，问题可能在于路由器。于是重启路由器，然后问题解决，简直玄学。&lt;/p&gt;

&lt;h2 id=&quot;apps&quot;&gt;Apps&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Macbook network speed monitor &lt;code class=&quot;highlighter-rouge&quot;&gt;MenuMetersApp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;haproxy&quot;&gt;HAProxy&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HA&lt;/code&gt; stands for &lt;code class=&quot;highlighter-rouge&quot;&gt;High Avaliability&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;HAProxy提供高可用性、负载均衡以及基于TCP和HTTP应用的代理，支持虚拟主机，免费、快速并且可靠。据官方数据，其最高极限支持10G的并发。&lt;/p&gt;

&lt;p&gt;HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合到当前的架构中，同时可以保护web服务器不被暴露到网络上。&lt;/p&gt;

&lt;p&gt;其支持从4层至7层的网络交换，即覆盖所有的TCP协议。&lt;/p&gt;

&lt;h2 id=&quot;基本配置及说明&quot;&gt;基本配置及说明&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;global               &lt;span class=&quot;c&quot;&gt;#全局设置&lt;/span&gt;
    log 127.0.0.1   local0   &lt;span class=&quot;c&quot;&gt;#日志输出配置，所有日志都记录在本机，通过local0输出&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#log loghost    local0 info&lt;/span&gt;
    maxconn 4096             &lt;span class=&quot;c&quot;&gt;#最大连接数&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;chroot&lt;/span&gt; /usr/local/haproxy
    uid 99                   &lt;span class=&quot;c&quot;&gt;#所属运行的用户uid&lt;/span&gt;
    gid 99                   &lt;span class=&quot;c&quot;&gt;#所属运行的用户组&lt;/span&gt;
    group haproxy            &lt;span class=&quot;c&quot;&gt;#用户组&lt;/span&gt;
    daemon                   &lt;span class=&quot;c&quot;&gt;#后台运行haproxy&lt;/span&gt;
    nbproc 1                 &lt;span class=&quot;c&quot;&gt;#启动1个haproxy实例&lt;/span&gt;
    pidfile /usr/local/haproxy/haproxy.pid  &lt;span class=&quot;c&quot;&gt;#将所有进程PID写入pid文件&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#debug&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#quiet&lt;/span&gt;
 
defaults             &lt;span class=&quot;c&quot;&gt;#默认设置&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#log    global&lt;/span&gt;
    log     127.0.0.1       local3      &lt;span class=&quot;c&quot;&gt;#日志文件的输出定向&lt;/span&gt;
 
    &lt;span class=&quot;c&quot;&gt;#默认的模式:tcp|http|health&lt;/span&gt;
    mode   http         &lt;span class=&quot;c&quot;&gt;#所处理的类别,默认采用http模式&lt;/span&gt;
 
    option  httplog      &lt;span class=&quot;c&quot;&gt;#日志类别,采用http日志格式`&lt;/span&gt;
    option  dontlognull
    option  forwardfor   &lt;span class=&quot;c&quot;&gt;#将客户端真实ip加到HTTP Header中供后端服务器读取&lt;/span&gt;
    option  retries 3    &lt;span class=&quot;c&quot;&gt;#三次连接失败则认证服务器不可用&lt;/span&gt;
    option  httpclose    &lt;span class=&quot;c&quot;&gt;#每次请求完毕后主动关闭http通道,haproxy不支持keep-alive,只能模拟这种模式的实现&lt;/span&gt;
    retries 3            &lt;span class=&quot;c&quot;&gt;#3次连接失败就认为服务器不可用，主要通过后面的check检查&lt;/span&gt;
    option  redispatch   &lt;span class=&quot;c&quot;&gt;#当serverid对应的服务器挂掉后，强制定向到其他健康服务器&lt;/span&gt;
    option  abortonclose &lt;span class=&quot;c&quot;&gt;#当服务器负载很高时，自动结束掉当前队列中处理比较久的链接&lt;/span&gt;
    maxconn 2000         &lt;span class=&quot;c&quot;&gt;#默认最大连接数&lt;/span&gt;
 
    &lt;span class=&quot;nb&quot;&gt;timeout &lt;/span&gt;connect 5000  &lt;span class=&quot;c&quot;&gt;#连接超时时间&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;timeout &lt;/span&gt;client  50000 &lt;span class=&quot;c&quot;&gt;#客户端连接超时时间&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;timeout &lt;/span&gt;server  50000 &lt;span class=&quot;c&quot;&gt;#服务器端连接超时时间&lt;/span&gt;
 
    stats   &lt;span class=&quot;nb&quot;&gt;enable
    &lt;/span&gt;stats   uri /haproxy-stats   &lt;span class=&quot;c&quot;&gt;#haproxy监控页面的访问地址&lt;/span&gt;
    stats   auth &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;:test123    &lt;span class=&quot;c&quot;&gt;#设置监控页面的用户和密码&lt;/span&gt;
    stats   hide-version         &lt;span class=&quot;c&quot;&gt;#隐藏统计页面的HAproxy版本信息&lt;/span&gt;
 
frontend http-in              &lt;span class=&quot;c&quot;&gt;#前台&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:81
    mode    http
    option  httplog
    log     global
    default_backend htmpool   &lt;span class=&quot;c&quot;&gt;#静态服务器池&lt;/span&gt;
 
backend htmpool               &lt;span class=&quot;c&quot;&gt;#后台&lt;/span&gt;
		option allbackups  &lt;span class=&quot;c&quot;&gt;#设置了backup的时候,默认第一个backup会优先,设置option allbackups后所有备份服务器权重一样&lt;/span&gt;
    balance leastconn         &lt;span class=&quot;c&quot;&gt;#负载均衡算法，其他可选 source, roundrobin&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# source 根据客户端IP进行哈希的方式&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# roundrobin 轮转&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# leastcon 选择当前请求数最少的服务器&lt;/span&gt;
    option  httpchk HEAD /index.html HTTP/1.0    &lt;span class=&quot;c&quot;&gt;#健康检查&lt;/span&gt;
    server  web1 192.168.2.10:80 cookie 1 weight 5 check inter 2000 rise 2 fall 3
    server  web2 192.168.2.11:80 cookie 2 weight 3 check inter 2000 rise 2 fall 3
    &lt;span class=&quot;c&quot;&gt;# web1/web2:自定义服务器别名&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 192.168.2.10:80:服务器IP:Port&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# cookie 1/2:表示serverid&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# weight: 服务器权重，数字越大分配到的请求数越高&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# check: 接受定时健康检查 &lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# inter 2000: 检查频率&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# rise 2: 两次检测正确认为服务器可用&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# fall 3: 三次失败认为服务器不可用&lt;/span&gt;
 
 		&lt;span class=&quot;c&quot;&gt;#备份机器配置,正常情况下备机不会使用,当主机的全部服务器都down的时候备机会启用&lt;/span&gt;
    server backup1 10.1.7.114:80 check backup inter 1500 rise 3 fall 3
    server bakcup2 10.1.7.114:80 check backup inter 1500 rise 3 fall 3
 
 
listen w.gdu.me 0.0.0.0:80
    option  httpchk GET /index.html
    server  s1 192.168.2.10:80 weight 3 check
    server  s3 192.168.2.11:80 weight 3 check
 
&lt;span class=&quot;c&quot;&gt;# https的配置方法&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ------------------------------------------------------------------------------------&lt;/span&gt;
listen login_https_server
    &lt;span class=&quot;nb&quot;&gt;bind &lt;/span&gt;0.0.0.0:443   &lt;span class=&quot;c&quot;&gt;#绑定HTTPS的443端口&lt;/span&gt;
    mode tcp           &lt;span class=&quot;c&quot;&gt;#https必须使用tcp模式&lt;/span&gt;
    log global
    balance roundrobin
    option httpchk GET /member/login.jhtml HTTP/1.1&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;Host:login.daily.taobao.net
    &lt;span class=&quot;c&quot;&gt;#回送给server的端口也必须是443&lt;/span&gt;
    server vm94f.sqa 192.168.212.94:443 check port 80 inter 6000 rise 3 fall 3
    server v215120.sqa 192.168.215.120:443 check port 80 inter 6000 rise 3 fall 3
 
 
&lt;span class=&quot;c&quot;&gt;# frontend配置&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# --------------------------------------------------------------------------&lt;/span&gt;
frontend http_80_in
    &lt;span class=&quot;nb&quot;&gt;bind &lt;/span&gt;0.0.0.0:80   &lt;span class=&quot;c&quot;&gt;#监听端口&lt;/span&gt;
    mode http         &lt;span class=&quot;c&quot;&gt;#http的7层模式&lt;/span&gt;
    log global        &lt;span class=&quot;c&quot;&gt;#使用全局的日志配置&lt;/span&gt;
    option httplog    &lt;span class=&quot;c&quot;&gt;#启用http的log&lt;/span&gt;
    option httpclose  &lt;span class=&quot;c&quot;&gt;#每次请求完毕后主动关闭http通道,HA-Proxy不支持keep-alive模式&lt;/span&gt;
    option forwardfor &lt;span class=&quot;c&quot;&gt;##如果后端服务器需要获得客户端的真实IP需要配置次参数,将可以从Http Header中获得客户端IP&lt;/span&gt;
 
    &lt;span class=&quot;c&quot;&gt;#HAProxy的日志记录内容配置&lt;/span&gt;
    capture request header Host len 40              &lt;span class=&quot;c&quot;&gt;# 请求中的主机名&lt;/span&gt;
    capture request header Content-Length len 10    &lt;span class=&quot;c&quot;&gt;# 请求中的内容长度&lt;/span&gt;
    capture request header Referer len 200          &lt;span class=&quot;c&quot;&gt;# 请求中的引用地址&lt;/span&gt;
    capture response header Server len 40           &lt;span class=&quot;c&quot;&gt;# 响应中的server name&lt;/span&gt;
    capture response header Content-Length len 10   &lt;span class=&quot;c&quot;&gt;# 响应中的内容长度(可配合option logasap使用)&lt;/span&gt;
    capture response header Cache-Control len 8     &lt;span class=&quot;c&quot;&gt;# 响应中的cache控制&lt;/span&gt;
    capture response header Location len 20         &lt;span class=&quot;c&quot;&gt;# 响应中的重定向地址&lt;/span&gt;
 
 
    &lt;span class=&quot;c&quot;&gt;#ACL策略规则定义&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#-------------------------------------------------&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#如果请求的域名满足正则表达式返回true(-i:忽略大小写)&lt;/span&gt;
    acl denali_policy hdr_reg&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; ^&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www.gemini.taobao.net|my.gemini.taobao.net|auction1.gemini.taobao.net&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
 
    &lt;span class=&quot;c&quot;&gt;#如果请求域名满足trade.gemini.taobao.net返回true&lt;/span&gt;
    acl tm_policy hdr_dom&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; trade.gemini.taobao.net
 
    &lt;span class=&quot;c&quot;&gt;#在请求url中包含sip_apiname=,则此控制策略返回true,否则为false&lt;/span&gt;
    acl invalid_req url_sub &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sip_apiname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
 
    &lt;span class=&quot;c&quot;&gt;#在请求url中存在timetask作为部分地址路径,则此控制策略返回true,否则返回false&lt;/span&gt;
    acl timetask_req url_dir &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; timetask
 
    &lt;span class=&quot;c&quot;&gt;#当请求的header中Content-length等于0时返回true&lt;/span&gt;
    acl missing_cl hdr_cnt&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Content-length&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; eq 0
 
 
    &lt;span class=&quot;c&quot;&gt;#ACL策略匹配相应&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#-------------------------------------------------&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#当请求中header中Content-length等于0阻止请求返回403&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#block表示阻止请求,返回403错误&lt;/span&gt;
    block &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;missing_cl
 
    &lt;span class=&quot;c&quot;&gt;#如果不满足策略invalid_req,或者满足策略timetask_req,则阻止请求&lt;/span&gt;
    block &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;invalid_req &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; timetask_req
 
    &lt;span class=&quot;c&quot;&gt;#当满足denali_policy的策略时使用denali_server的backend&lt;/span&gt;
    use_backend denali_server &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;denali_policy
 
    &lt;span class=&quot;c&quot;&gt;#当满足tm_policy的策略时使用tm_server的backend&lt;/span&gt;
    use_backend tm_server &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;tm_policy
 
    &lt;span class=&quot;c&quot;&gt;#reqisetbe关键字定义,根据定义的关键字选择backend&lt;/span&gt;
    reqisetbe ^Host:&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;img           dynamic
    reqisetbe ^[^&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;img|css&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/  dynamic
    reqisetbe ^[^&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;/admin/stats stats
 
    &lt;span class=&quot;c&quot;&gt;#以上都不满足的时候使用默认mms_server的backend&lt;/span&gt;
    default_backend mms_server
 
    &lt;span class=&quot;c&quot;&gt;#HAProxy错误页面设置&lt;/span&gt;
    errorfile 400 /home/admin/haproxy/errorfiles/400.http
    errorfile 403 /home/admin/haproxy/errorfiles/403.http
    errorfile 504 /home/admin/haproxy/errorfiles/504.http
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="linux" /><summary type="html">Just memo, not a blog.</summary></entry><entry><title type="html">Zeller’s Congruence</title><link href="http://localhost:4000/archives/Zeller's-Congruence.html" rel="alternate" type="text/html" title="Zeller's Congruence" /><published>2019-09-09T00:00:00+08:00</published><updated>2019-09-09T00:00:00+08:00</updated><id>http://localhost:4000/archives/Zeller's-Congruence</id><content type="html" xml:base="http://localhost:4000/archives/Zeller's-Congruence.html">&lt;p&gt;&lt;strong&gt;Zeller’s congruence&lt;/strong&gt; is an algorithm devised by &lt;a href=&quot;https://en.wikipedia.org/wiki/Christian_Zeller&quot;&gt;Christian Zeller&lt;/a&gt; to calculate the day of the week for any date.&lt;/p&gt;

&lt;p&gt;The formula is simple (not that simple to remember):
&lt;script type=&quot;math/tex&quot;&gt;d = (D + \lfloor \frac{13(M+1)}{5} \rfloor + Y + \lfloor \frac{Y}{4} \rfloor + \lfloor \frac{C}{4} \rfloor -2C ) \% 7&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;where,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;D&lt;/script&gt; is the day of the month&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;M&lt;/script&gt; is the month
    &lt;ul&gt;
      &lt;li&gt;3 = March,  4 = April, 12 = December&lt;/li&gt;
      &lt;li&gt;13 = January, 14 = February of previous year, hence year = year - 1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;Y&lt;/script&gt; is the year of the century (e.g., 2022 % 100 = 22)&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt; is the zero-based century ( e.g., &lt;script type=&quot;math/tex&quot;&gt;\lfloor 2022 / 100 \rfloor  = 20&lt;/script&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E.g., &lt;script type=&quot;math/tex&quot;&gt;d(2019/09/09) = (9 + 13 * 10 / 5 + 19 + 4 + 5 - 40) \% 7 = 2&lt;/script&gt;, means it is Monday&lt;/p&gt;

&lt;p&gt;Python Code to get the day.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dayOfTheWeek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;divmod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Sunday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Monday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Tuesday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Wednesday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Thursday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Friday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Saturday&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result &lt;script type=&quot;math/tex&quot;&gt;d&lt;/script&gt; is the zero-based day of the week. It starts from Saturday(0 = Saturday), and ends on Friday (6 = Friday). For an ISO week date Day-of-Week d (1 = Monday to 7 = Sunday), a variant of formula is:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;d = ((d + 5) \% 7) + 1&lt;/script&gt;</content><author><name></name></author><category term="algorithm" /><category term="date" /><summary type="html">Zeller’s congruence is an algorithm devised by Christian Zeller to calculate the day of the week for any date.</summary></entry></feed>